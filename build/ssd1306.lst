ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"ssd1306.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.ssd1306_DegToRad,"ax",%progbits
  17              		.align	1
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv5-d16
  23              	ssd1306_DegToRad:
  24              	.LFB16:
  25              		.file 1 "../SSD1306/ssd1306/ssd1306.c"
   1:../SSD1306/ssd1306/ssd1306.c **** #include "ssd1306.h"
   2:../SSD1306/ssd1306/ssd1306.c **** #include <math.h>
   3:../SSD1306/ssd1306/ssd1306.c **** #include <stdlib.h>
   4:../SSD1306/ssd1306/ssd1306.c **** #include <string.h>  // For memcpy
   5:../SSD1306/ssd1306/ssd1306.c **** #include <i2c_oled.h>
   6:../SSD1306/ssd1306/ssd1306.c **** 
   7:../SSD1306/ssd1306/ssd1306.c **** #if defined(SSD1306_USE_I2C)
   8:../SSD1306/ssd1306/ssd1306.c **** 
   9:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_Reset(void) {
  10:../SSD1306/ssd1306/ssd1306.c ****     /* for I2C - do nothing */
  11:../SSD1306/ssd1306/ssd1306.c **** }
  12:../SSD1306/ssd1306/ssd1306.c **** 
  13:../SSD1306/ssd1306/ssd1306.c **** /**
  14:../SSD1306/ssd1306/ssd1306.c ****  * Run a write/read transaction to a given 7bit i2c address
  15:../SSD1306/ssd1306/ssd1306.c ****  * If both write & read are provided, the read will use repeated start.
  16:../SSD1306/ssd1306/ssd1306.c ****  * Both write and read are optional
  17:../SSD1306/ssd1306/ssd1306.c ****  * @param i2c peripheral of choice, eg I2C1
  18:../SSD1306/ssd1306/ssd1306.c ****  * @param addr 7 bit i2c device address
  19:../SSD1306/ssd1306/ssd1306.c ****  * @param w buffer of data to write
  20:../SSD1306/ssd1306/ssd1306.c ****  * @param wn length of w
  21:../SSD1306/ssd1306/ssd1306.c ****  */
  22:../SSD1306/ssd1306/ssd1306.c **** 
  23:../SSD1306/ssd1306/ssd1306.c **** 
  24:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_WriteCommand(uint8_t byte) {
  25:../SSD1306/ssd1306/ssd1306.c ****    //command=0x00 (control byte) : Co=0 D/C=0 + 6 '0's
  26:../SSD1306/ssd1306/ssd1306.c ****     i2c_xfer7(I2C_OLED, SSD1306_I2C_ADDR, 0x00, byte, 1U, AUTOEND);
  27:../SSD1306/ssd1306/ssd1306.c **** }
  28:../SSD1306/ssd1306/ssd1306.c **** 
  29:../SSD1306/ssd1306/ssd1306.c **** // Send data
  30:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_WriteData(uint8_t* buffer, size_t buff_size) {
  31:../SSD1306/ssd1306/ssd1306.c ****        //command=0x40 (control byte) : Co=0 D/C=1 + 6 '0's
  32:../SSD1306/ssd1306/ssd1306.c ****     i2c_xfer7(I2C_OLED, SSD1306_I2C_ADDR, 0x40, buffer, buff_size, AUTOEND);
  33:../SSD1306/ssd1306/ssd1306.c ****     
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 2


  34:../SSD1306/ssd1306/ssd1306.c **** }
  35:../SSD1306/ssd1306/ssd1306.c **** 
  36:../SSD1306/ssd1306/ssd1306.c **** #elif defined(SSD1306_USE_SPI)
  37:../SSD1306/ssd1306/ssd1306.c **** 
  38:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_Reset(void) {
  39:../SSD1306/ssd1306/ssd1306.c ****     // CS = High (not selected)
  40:../SSD1306/ssd1306/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET);
  41:../SSD1306/ssd1306/ssd1306.c **** 
  42:../SSD1306/ssd1306/ssd1306.c ****     // Reset the OLED
  43:../SSD1306/ssd1306/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_Reset_Port, SSD1306_Reset_Pin, GPIO_PIN_RESET);
  44:../SSD1306/ssd1306/ssd1306.c ****     delay_ms(10);
  45:../SSD1306/ssd1306/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_Reset_Port, SSD1306_Reset_Pin, GPIO_PIN_SET);
  46:../SSD1306/ssd1306/ssd1306.c ****     delay_ms(10);
  47:../SSD1306/ssd1306/ssd1306.c **** }
  48:../SSD1306/ssd1306/ssd1306.c **** 
  49:../SSD1306/ssd1306/ssd1306.c **** // Send a byte to the command register
  50:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_WriteCommand(uint8_t byte) {
  51:../SSD1306/ssd1306/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
  52:../SSD1306/ssd1306/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_RESET); // command
  53:../SSD1306/ssd1306/ssd1306.c ****     HAL_SPI_Transmit(&SSD1306_SPI_PORT, (uint8_t *) &byte, 1, HAL_MAX_DELAY);
  54:../SSD1306/ssd1306/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET); // un-select OLED
  55:../SSD1306/ssd1306/ssd1306.c **** }
  56:../SSD1306/ssd1306/ssd1306.c **** 
  57:../SSD1306/ssd1306/ssd1306.c **** // Send data
  58:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_WriteData(uint8_t* buffer, size_t buff_size) {
  59:../SSD1306/ssd1306/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_RESET); // select OLED
  60:../SSD1306/ssd1306/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_DC_Port, SSD1306_DC_Pin, GPIO_PIN_SET); // data
  61:../SSD1306/ssd1306/ssd1306.c ****     HAL_SPI_Transmit(&SSD1306_SPI_PORT, buffer, buff_size, HAL_MAX_DELAY);
  62:../SSD1306/ssd1306/ssd1306.c ****     HAL_GPIO_WritePin(SSD1306_CS_Port, SSD1306_CS_Pin, GPIO_PIN_SET); // un-select OLED
  63:../SSD1306/ssd1306/ssd1306.c **** }
  64:../SSD1306/ssd1306/ssd1306.c **** 
  65:../SSD1306/ssd1306/ssd1306.c **** #else
  66:../SSD1306/ssd1306/ssd1306.c **** #error "You should define SSD1306_USE_SPI or SSD1306_USE_I2C macro"
  67:../SSD1306/ssd1306/ssd1306.c **** #endif
  68:../SSD1306/ssd1306/ssd1306.c **** 
  69:../SSD1306/ssd1306/ssd1306.c **** 
  70:../SSD1306/ssd1306/ssd1306.c **** // Screenbuffer
  71:../SSD1306/ssd1306/ssd1306.c **** static uint8_t SSD1306_Buffer[SSD1306_BUFFER_SIZE];
  72:../SSD1306/ssd1306/ssd1306.c **** 
  73:../SSD1306/ssd1306/ssd1306.c **** // Screen object
  74:../SSD1306/ssd1306/ssd1306.c **** static SSD1306_t SSD1306;
  75:../SSD1306/ssd1306/ssd1306.c **** 
  76:../SSD1306/ssd1306/ssd1306.c **** /* Fills the Screenbuffer with values from a given buffer of a fixed length */
  77:../SSD1306/ssd1306/ssd1306.c **** SSD1306_Error_t ssd1306_FillBuffer(uint8_t* buf, uint32_t len) {
  78:../SSD1306/ssd1306/ssd1306.c ****     SSD1306_Error_t ret = SSD1306_ERR;
  79:../SSD1306/ssd1306/ssd1306.c ****     if (len <= SSD1306_BUFFER_SIZE) {
  80:../SSD1306/ssd1306/ssd1306.c ****         memcpy(SSD1306_Buffer,buf,len);
  81:../SSD1306/ssd1306/ssd1306.c ****         ret = SSD1306_OK;
  82:../SSD1306/ssd1306/ssd1306.c ****     }
  83:../SSD1306/ssd1306/ssd1306.c ****     return ret;
  84:../SSD1306/ssd1306/ssd1306.c **** }
  85:../SSD1306/ssd1306/ssd1306.c **** 
  86:../SSD1306/ssd1306/ssd1306.c **** // Initialize the oled screen
  87:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_Init(void) {
  88:../SSD1306/ssd1306/ssd1306.c ****     // Reset OLED
  89:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_Reset();
  90:../SSD1306/ssd1306/ssd1306.c **** 
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 3


  91:../SSD1306/ssd1306/ssd1306.c ****     // Wait for the screen to boot
  92:../SSD1306/ssd1306/ssd1306.c ****     delay_ms(100);
  93:../SSD1306/ssd1306/ssd1306.c **** 
  94:../SSD1306/ssd1306/ssd1306.c ****     // Init OLED
  95:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_SetDisplayOn(0); //display off
  96:../SSD1306/ssd1306/ssd1306.c **** 
  97:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x20); //Set Memory Addressing Mode
  98:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
  99:../SSD1306/ssd1306/ssd1306.c ****                                 // 10b,Page Addressing Mode (RESET); 11b,Invalid
 100:../SSD1306/ssd1306/ssd1306.c **** 
 101:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 102:../SSD1306/ssd1306/ssd1306.c **** 
 103:../SSD1306/ssd1306/ssd1306.c **** #ifdef SSD1306_MIRROR_VERT
 104:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0xC0); // Mirror vertically
 105:../SSD1306/ssd1306/ssd1306.c **** #else
 106:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0xC8); //Set COM Output Scan Direction
 107:../SSD1306/ssd1306/ssd1306.c **** #endif
 108:../SSD1306/ssd1306/ssd1306.c **** 
 109:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x00); //---set low column address
 110:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x10); //---set high column address
 111:../SSD1306/ssd1306/ssd1306.c **** 
 112:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x40); //--set start line address - CHECK
 113:../SSD1306/ssd1306/ssd1306.c **** 
 114:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_SetContrast(0xFF);
 115:../SSD1306/ssd1306/ssd1306.c **** 
 116:../SSD1306/ssd1306/ssd1306.c **** #ifdef SSD1306_MIRROR_HORIZ
 117:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0xA0); // Mirror horizontally
 118:../SSD1306/ssd1306/ssd1306.c **** #else
 119:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0xA1); //--set segment re-map 0 to 127 - CHECK
 120:../SSD1306/ssd1306/ssd1306.c **** #endif
 121:../SSD1306/ssd1306/ssd1306.c **** 
 122:../SSD1306/ssd1306/ssd1306.c **** #ifdef SSD1306_INVERSE_COLOR
 123:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0xA7); //--set inverse color
 124:../SSD1306/ssd1306/ssd1306.c **** #else
 125:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0xA6); //--set normal color
 126:../SSD1306/ssd1306/ssd1306.c **** #endif
 127:../SSD1306/ssd1306/ssd1306.c **** 
 128:../SSD1306/ssd1306/ssd1306.c **** // Set multiplex ratio.
 129:../SSD1306/ssd1306/ssd1306.c **** #if (SSD1306_HEIGHT == 128)
 130:../SSD1306/ssd1306/ssd1306.c ****     // Found in the Luma Python lib for SH1106.
 131:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0xFF);
 132:../SSD1306/ssd1306/ssd1306.c **** #else
 133:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0xA8); //--set multiplex ratio(1 to 64) - CHECK
 134:../SSD1306/ssd1306/ssd1306.c **** #endif
 135:../SSD1306/ssd1306/ssd1306.c **** 
 136:../SSD1306/ssd1306/ssd1306.c **** #if (SSD1306_HEIGHT == 32)
 137:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x1F); //
 138:../SSD1306/ssd1306/ssd1306.c **** #elif (SSD1306_HEIGHT == 64)
 139:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x3F); //
 140:../SSD1306/ssd1306/ssd1306.c **** #elif (SSD1306_HEIGHT == 128)
 141:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x3F); // Seems to work for 128px high displays too.
 142:../SSD1306/ssd1306/ssd1306.c **** #else
 143:../SSD1306/ssd1306/ssd1306.c **** #error "Only 32, 64, or 128 lines of height are supported!"
 144:../SSD1306/ssd1306/ssd1306.c **** #endif
 145:../SSD1306/ssd1306/ssd1306.c **** 
 146:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 147:../SSD1306/ssd1306/ssd1306.c **** 
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 4


 148:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0xD3); //-set display offset - CHECK
 149:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x00); //-not offset
 150:../SSD1306/ssd1306/ssd1306.c **** 
 151:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 152:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0xF0); //--set divide ratio
 153:../SSD1306/ssd1306/ssd1306.c **** 
 154:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0xD9); //--set pre-charge period
 155:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x22); //
 156:../SSD1306/ssd1306/ssd1306.c **** 
 157:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0xDA); //--set com pins hardware configuration - CHECK
 158:../SSD1306/ssd1306/ssd1306.c **** #if (SSD1306_HEIGHT == 32)
 159:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x02);
 160:../SSD1306/ssd1306/ssd1306.c **** #elif (SSD1306_HEIGHT == 64)
 161:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x12);
 162:../SSD1306/ssd1306/ssd1306.c **** #elif (SSD1306_HEIGHT == 128)
 163:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x12);
 164:../SSD1306/ssd1306/ssd1306.c **** #else
 165:../SSD1306/ssd1306/ssd1306.c **** #error "Only 32, 64, or 128 lines of height are supported!"
 166:../SSD1306/ssd1306/ssd1306.c **** #endif
 167:../SSD1306/ssd1306/ssd1306.c **** 
 168:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0xDB); //--set vcomh
 169:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 170:../SSD1306/ssd1306/ssd1306.c **** 
 171:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x8D); //--set DC-DC enable
 172:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x14); //
 173:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_SetDisplayOn(1); //--turn on SSD1306 panel
 174:../SSD1306/ssd1306/ssd1306.c **** 
 175:../SSD1306/ssd1306/ssd1306.c ****     // Clear screen
 176:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_Fill(Black);
 177:../SSD1306/ssd1306/ssd1306.c ****     
 178:../SSD1306/ssd1306/ssd1306.c ****     // Flush buffer to screen
 179:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_UpdateScreen();
 180:../SSD1306/ssd1306/ssd1306.c ****     
 181:../SSD1306/ssd1306/ssd1306.c ****     // Set default values for screen object
 182:../SSD1306/ssd1306/ssd1306.c ****     SSD1306.CurrentX = 0;
 183:../SSD1306/ssd1306/ssd1306.c ****     SSD1306.CurrentY = 0;
 184:../SSD1306/ssd1306/ssd1306.c ****     
 185:../SSD1306/ssd1306/ssd1306.c ****     SSD1306.Initialized = 1;
 186:../SSD1306/ssd1306/ssd1306.c **** }
 187:../SSD1306/ssd1306/ssd1306.c **** 
 188:../SSD1306/ssd1306/ssd1306.c **** // Fill the whole screen with the given color
 189:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_Fill(SSD1306_COLOR color) {
 190:../SSD1306/ssd1306/ssd1306.c ****     /* Set memory */
 191:../SSD1306/ssd1306/ssd1306.c ****     uint32_t i;
 192:../SSD1306/ssd1306/ssd1306.c **** 
 193:../SSD1306/ssd1306/ssd1306.c ****     for(i = 0; i < sizeof(SSD1306_Buffer); i++) {
 194:../SSD1306/ssd1306/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 195:../SSD1306/ssd1306/ssd1306.c ****     }
 196:../SSD1306/ssd1306/ssd1306.c **** }
 197:../SSD1306/ssd1306/ssd1306.c **** 
 198:../SSD1306/ssd1306/ssd1306.c **** // Write the screenbuffer with changed to the screen
 199:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_UpdateScreen(void) {
 200:../SSD1306/ssd1306/ssd1306.c ****     // Write data to each page of RAM. Number of pages
 201:../SSD1306/ssd1306/ssd1306.c ****     // depends on the screen height:
 202:../SSD1306/ssd1306/ssd1306.c ****     //
 203:../SSD1306/ssd1306/ssd1306.c ****     //  * 32px   ==  4 pages
 204:../SSD1306/ssd1306/ssd1306.c ****     //  * 64px   ==  8 pages
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 5


 205:../SSD1306/ssd1306/ssd1306.c ****     //  * 128px  ==  16 pages
 206:../SSD1306/ssd1306/ssd1306.c ****     for(uint8_t i = 0; i < SSD1306_HEIGHT/8; i++) {
 207:../SSD1306/ssd1306/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 208:../SSD1306/ssd1306/ssd1306.c ****         ssd1306_WriteCommand(0x00);
 209:../SSD1306/ssd1306/ssd1306.c ****         ssd1306_WriteCommand(0x10);
 210:../SSD1306/ssd1306/ssd1306.c ****         ssd1306_WriteData(&SSD1306_Buffer[SSD1306_WIDTH*i],SSD1306_WIDTH);
 211:../SSD1306/ssd1306/ssd1306.c ****     }
 212:../SSD1306/ssd1306/ssd1306.c **** }
 213:../SSD1306/ssd1306/ssd1306.c **** 
 214:../SSD1306/ssd1306/ssd1306.c **** //    Draw one pixel in the screenbuffer
 215:../SSD1306/ssd1306/ssd1306.c **** //    X => X Coordinate
 216:../SSD1306/ssd1306/ssd1306.c **** //    Y => Y Coordinate
 217:../SSD1306/ssd1306/ssd1306.c **** //    color => Pixel color
 218:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_DrawPixel(uint8_t x, uint8_t y, SSD1306_COLOR color) {
 219:../SSD1306/ssd1306/ssd1306.c ****     if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 220:../SSD1306/ssd1306/ssd1306.c ****         // Don't write outside the buffer
 221:../SSD1306/ssd1306/ssd1306.c ****         return;
 222:../SSD1306/ssd1306/ssd1306.c ****     }
 223:../SSD1306/ssd1306/ssd1306.c ****     
 224:../SSD1306/ssd1306/ssd1306.c ****     // Check if pixel should be inverted
 225:../SSD1306/ssd1306/ssd1306.c ****     if(SSD1306.Inverted) {
 226:../SSD1306/ssd1306/ssd1306.c ****         color = (SSD1306_COLOR)!color;
 227:../SSD1306/ssd1306/ssd1306.c ****     }
 228:../SSD1306/ssd1306/ssd1306.c ****     
 229:../SSD1306/ssd1306/ssd1306.c ****     // Draw in the right color
 230:../SSD1306/ssd1306/ssd1306.c ****     if(color == White) {
 231:../SSD1306/ssd1306/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 232:../SSD1306/ssd1306/ssd1306.c ****     } else { 
 233:../SSD1306/ssd1306/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] &= ~(1 << (y % 8));
 234:../SSD1306/ssd1306/ssd1306.c ****     }
 235:../SSD1306/ssd1306/ssd1306.c **** }
 236:../SSD1306/ssd1306/ssd1306.c **** 
 237:../SSD1306/ssd1306/ssd1306.c **** // Draw 1 char to the screen buffer
 238:../SSD1306/ssd1306/ssd1306.c **** // ch       => char om weg te schrijven
 239:../SSD1306/ssd1306/ssd1306.c **** // Font     => Font waarmee we gaan schrijven
 240:../SSD1306/ssd1306/ssd1306.c **** // color    => Black or White
 241:../SSD1306/ssd1306/ssd1306.c **** char ssd1306_WriteChar(char ch, FontDef Font, SSD1306_COLOR color) {
 242:../SSD1306/ssd1306/ssd1306.c ****     uint32_t i, b, j;
 243:../SSD1306/ssd1306/ssd1306.c ****     
 244:../SSD1306/ssd1306/ssd1306.c ****     // Check if character is valid
 245:../SSD1306/ssd1306/ssd1306.c ****     if (ch < 32 || ch > 126)
 246:../SSD1306/ssd1306/ssd1306.c ****         return 0;
 247:../SSD1306/ssd1306/ssd1306.c ****     
 248:../SSD1306/ssd1306/ssd1306.c ****     // Check remaining space on current line
 249:../SSD1306/ssd1306/ssd1306.c ****     if (SSD1306_WIDTH < (SSD1306.CurrentX + Font.FontWidth) ||
 250:../SSD1306/ssd1306/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 251:../SSD1306/ssd1306/ssd1306.c ****     {
 252:../SSD1306/ssd1306/ssd1306.c ****         // Not enough space on current line
 253:../SSD1306/ssd1306/ssd1306.c ****         return 0;
 254:../SSD1306/ssd1306/ssd1306.c ****     }
 255:../SSD1306/ssd1306/ssd1306.c ****     
 256:../SSD1306/ssd1306/ssd1306.c ****     // Use the font to write
 257:../SSD1306/ssd1306/ssd1306.c ****     for(i = 0; i < Font.FontHeight; i++) {
 258:../SSD1306/ssd1306/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 259:../SSD1306/ssd1306/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 260:../SSD1306/ssd1306/ssd1306.c ****             if((b << j) & 0x8000)  {
 261:../SSD1306/ssd1306/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 6


 262:../SSD1306/ssd1306/ssd1306.c ****             } else {
 263:../SSD1306/ssd1306/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR)!col
 264:../SSD1306/ssd1306/ssd1306.c ****             }
 265:../SSD1306/ssd1306/ssd1306.c ****         }
 266:../SSD1306/ssd1306/ssd1306.c ****     }
 267:../SSD1306/ssd1306/ssd1306.c ****     
 268:../SSD1306/ssd1306/ssd1306.c ****     // The current space is now taken
 269:../SSD1306/ssd1306/ssd1306.c ****     SSD1306.CurrentX += Font.FontWidth;
 270:../SSD1306/ssd1306/ssd1306.c ****     
 271:../SSD1306/ssd1306/ssd1306.c ****     // Return written char for validation
 272:../SSD1306/ssd1306/ssd1306.c ****     return ch;
 273:../SSD1306/ssd1306/ssd1306.c **** }
 274:../SSD1306/ssd1306/ssd1306.c **** 
 275:../SSD1306/ssd1306/ssd1306.c **** // Write full string to screenbuffer
 276:../SSD1306/ssd1306/ssd1306.c **** char ssd1306_WriteString(char* str, FontDef Font, SSD1306_COLOR color) {
 277:../SSD1306/ssd1306/ssd1306.c ****     // Write until null-byte
 278:../SSD1306/ssd1306/ssd1306.c ****     while (*str) {
 279:../SSD1306/ssd1306/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 280:../SSD1306/ssd1306/ssd1306.c ****             // Char could not be written
 281:../SSD1306/ssd1306/ssd1306.c ****             return *str;
 282:../SSD1306/ssd1306/ssd1306.c ****         }
 283:../SSD1306/ssd1306/ssd1306.c ****         
 284:../SSD1306/ssd1306/ssd1306.c ****         // Next char
 285:../SSD1306/ssd1306/ssd1306.c ****         str++;
 286:../SSD1306/ssd1306/ssd1306.c ****     }
 287:../SSD1306/ssd1306/ssd1306.c ****     
 288:../SSD1306/ssd1306/ssd1306.c ****     // Everything ok
 289:../SSD1306/ssd1306/ssd1306.c ****     return *str;
 290:../SSD1306/ssd1306/ssd1306.c **** }
 291:../SSD1306/ssd1306/ssd1306.c **** 
 292:../SSD1306/ssd1306/ssd1306.c **** // Position the cursor
 293:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_SetCursor(uint8_t x, uint8_t y) {
 294:../SSD1306/ssd1306/ssd1306.c ****     SSD1306.CurrentX = x;
 295:../SSD1306/ssd1306/ssd1306.c ****     SSD1306.CurrentY = y;
 296:../SSD1306/ssd1306/ssd1306.c **** }
 297:../SSD1306/ssd1306/ssd1306.c **** 
 298:../SSD1306/ssd1306/ssd1306.c **** // Draw line by Bresenhem's algorithm
 299:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_Line(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 300:../SSD1306/ssd1306/ssd1306.c ****   int32_t deltaX = abs(x2 - x1);
 301:../SSD1306/ssd1306/ssd1306.c ****   int32_t deltaY = abs(y2 - y1);
 302:../SSD1306/ssd1306/ssd1306.c ****   int32_t signX = ((x1 < x2) ? 1 : -1);
 303:../SSD1306/ssd1306/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 304:../SSD1306/ssd1306/ssd1306.c ****   int32_t error = deltaX - deltaY;
 305:../SSD1306/ssd1306/ssd1306.c ****   int32_t error2;
 306:../SSD1306/ssd1306/ssd1306.c ****     
 307:../SSD1306/ssd1306/ssd1306.c ****   ssd1306_DrawPixel(x2, y2, color);
 308:../SSD1306/ssd1306/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 309:../SSD1306/ssd1306/ssd1306.c ****     {
 310:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_DrawPixel(x1, y1, color);
 311:../SSD1306/ssd1306/ssd1306.c ****     error2 = error * 2;
 312:../SSD1306/ssd1306/ssd1306.c ****     if(error2 > -deltaY)
 313:../SSD1306/ssd1306/ssd1306.c ****     {
 314:../SSD1306/ssd1306/ssd1306.c ****       error -= deltaY;
 315:../SSD1306/ssd1306/ssd1306.c ****       x1 += signX;
 316:../SSD1306/ssd1306/ssd1306.c ****     }
 317:../SSD1306/ssd1306/ssd1306.c ****     else
 318:../SSD1306/ssd1306/ssd1306.c ****     {
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 7


 319:../SSD1306/ssd1306/ssd1306.c ****     /*nothing to do*/
 320:../SSD1306/ssd1306/ssd1306.c ****     }
 321:../SSD1306/ssd1306/ssd1306.c ****         
 322:../SSD1306/ssd1306/ssd1306.c ****     if(error2 < deltaX)
 323:../SSD1306/ssd1306/ssd1306.c ****     {
 324:../SSD1306/ssd1306/ssd1306.c ****       error += deltaX;
 325:../SSD1306/ssd1306/ssd1306.c ****       y1 += signY;
 326:../SSD1306/ssd1306/ssd1306.c ****     }
 327:../SSD1306/ssd1306/ssd1306.c ****     else
 328:../SSD1306/ssd1306/ssd1306.c ****     {
 329:../SSD1306/ssd1306/ssd1306.c ****     /*nothing to do*/
 330:../SSD1306/ssd1306/ssd1306.c ****     }
 331:../SSD1306/ssd1306/ssd1306.c ****   }
 332:../SSD1306/ssd1306/ssd1306.c ****   return;
 333:../SSD1306/ssd1306/ssd1306.c **** }
 334:../SSD1306/ssd1306/ssd1306.c **** //Draw polyline
 335:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_Polyline(const SSD1306_VERTEX *par_vertex, uint16_t par_size, SSD1306_COLOR color) {
 336:../SSD1306/ssd1306/ssd1306.c ****   uint16_t i;
 337:../SSD1306/ssd1306/ssd1306.c ****   if(par_vertex != 0){
 338:../SSD1306/ssd1306/ssd1306.c ****     for(i = 1; i < par_size; i++){
 339:../SSD1306/ssd1306/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 340:../SSD1306/ssd1306/ssd1306.c ****     }
 341:../SSD1306/ssd1306/ssd1306.c ****   }
 342:../SSD1306/ssd1306/ssd1306.c ****   else
 343:../SSD1306/ssd1306/ssd1306.c ****   {
 344:../SSD1306/ssd1306/ssd1306.c ****     /*nothing to do*/
 345:../SSD1306/ssd1306/ssd1306.c ****   }
 346:../SSD1306/ssd1306/ssd1306.c ****   return;
 347:../SSD1306/ssd1306/ssd1306.c **** }
 348:../SSD1306/ssd1306/ssd1306.c **** /*Convert Degrees to Radians*/
 349:../SSD1306/ssd1306/ssd1306.c **** static float ssd1306_DegToRad(float par_deg) {
  26              		.loc 1 349 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 350:../SSD1306/ssd1306/ssd1306.c ****     return par_deg * 3.14 / 180.0;
  32              		.loc 1 350 0
  33 0000 B7EEC00A 		vcvt.f64.f32	d0, s0
  34              	.LVL1:
  35 0004 9FED067B 		vldr.64	d7, .L2
  36 0008 20EE077B 		vmul.f64	d7, d0, d7
  37 000c 9FED066B 		vldr.64	d6, .L2+8
  38 0010 87EE060B 		vdiv.f64	d0, d7, d6
 351:../SSD1306/ssd1306/ssd1306.c **** }
  39              		.loc 1 351 0
  40 0014 B7EEC00B 		vcvt.f32.f64	s0, d0
  41 0018 7047     		bx	lr
  42              	.L3:
  43 001a 00BFAFF3 		.align	3
  43      0080
  44              	.L2:
  45 0020 1F85EB51 		.word	1374389535
  46 0024 B81E0940 		.word	1074339512
  47 0028 00000000 		.word	0
  48 002c 00806640 		.word	1080459264
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 8


  49              		.cfi_endproc
  50              	.LFE16:
  52              		.section	.text.ssd1306_NormalizeTo0_360,"ax",%progbits
  53              		.align	1
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu fpv5-d16
  59              	ssd1306_NormalizeTo0_360:
  60              	.LFB17:
 352:../SSD1306/ssd1306/ssd1306.c **** /*Normalize degree to [0;360]*/
 353:../SSD1306/ssd1306/ssd1306.c **** static uint16_t ssd1306_NormalizeTo0_360(uint16_t par_deg) {
  61              		.loc 1 353 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66              	.LVL2:
 354:../SSD1306/ssd1306/ssd1306.c ****   uint16_t loc_angle;
 355:../SSD1306/ssd1306/ssd1306.c ****   if(par_deg <= 360)
  67              		.loc 1 355 0
  68 0000 B0F5B47F 		cmp	r0, #360
  69 0004 00D9     		bls	.L5
  70              	.LVL3:
 356:../SSD1306/ssd1306/ssd1306.c ****   {
 357:../SSD1306/ssd1306/ssd1306.c ****     loc_angle = par_deg;
 358:../SSD1306/ssd1306/ssd1306.c ****   }
 359:../SSD1306/ssd1306/ssd1306.c ****   else
 360:../SSD1306/ssd1306/ssd1306.c ****   {
 361:../SSD1306/ssd1306/ssd1306.c ****     loc_angle = par_deg % 360;
 362:../SSD1306/ssd1306/ssd1306.c ****     loc_angle = ((par_deg != 0)?par_deg:360);
  71              		.loc 1 362 0
  72 0006 00B1     		cbz	r0, .L7
  73              	.LVL4:
  74              	.L5:
 363:../SSD1306/ssd1306/ssd1306.c ****   }
 364:../SSD1306/ssd1306/ssd1306.c ****   return loc_angle;
 365:../SSD1306/ssd1306/ssd1306.c **** }
  75              		.loc 1 365 0
  76 0008 7047     		bx	lr
  77              	.LVL5:
  78              	.L7:
 362:../SSD1306/ssd1306/ssd1306.c ****   }
  79              		.loc 1 362 0
  80 000a 4FF4B470 		mov	r0, #360
  81              	.LVL6:
  82 000e FBE7     		b	.L5
  83              		.cfi_endproc
  84              	.LFE17:
  86              		.section	.text.ssd1306_Reset,"ax",%progbits
  87              		.align	1
  88              		.global	ssd1306_Reset
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv5-d16
  94              	ssd1306_Reset:
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 9


  95              	.LFB3:
   9:../SSD1306/ssd1306/ssd1306.c ****     /* for I2C - do nothing */
  96              		.loc 1 9 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
  11:../SSD1306/ssd1306/ssd1306.c **** 
 101              		.loc 1 11 0
 102 0000 7047     		bx	lr
 103              		.cfi_endproc
 104              	.LFE3:
 106              		.section	.text.ssd1306_WriteCommand,"ax",%progbits
 107              		.align	1
 108              		.global	ssd1306_WriteCommand
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 112              		.fpu fpv5-d16
 114              	ssd1306_WriteCommand:
 115              	.LFB4:
  24:../SSD1306/ssd1306/ssd1306.c ****    //command=0x00 (control byte) : Co=0 D/C=0 + 6 '0's
 116              		.loc 1 24 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              	.LVL7:
 121 0000 00B5     		push	{lr}
 122              	.LCFI0:
 123              		.cfi_def_cfa_offset 4
 124              		.cfi_offset 14, -4
 125 0002 83B0     		sub	sp, sp, #12
 126              	.LCFI1:
 127              		.cfi_def_cfa_offset 16
  26:../SSD1306/ssd1306/ssd1306.c **** }
 128              		.loc 1 26 0
 129 0004 0123     		movs	r3, #1
 130 0006 0193     		str	r3, [sp, #4]
 131 0008 0093     		str	r3, [sp]
 132 000a 0346     		mov	r3, r0
 133 000c 0022     		movs	r2, #0
 134 000e 7821     		movs	r1, #120
 135 0010 0248     		ldr	r0, .L11
 136              	.LVL8:
 137 0012 FFF7FEFF 		bl	i2c_xfer7
 138              	.LVL9:
  27:../SSD1306/ssd1306/ssd1306.c **** 
 139              		.loc 1 27 0
 140 0016 03B0     		add	sp, sp, #12
 141              	.LCFI2:
 142              		.cfi_def_cfa_offset 4
 143              		@ sp needed
 144 0018 5DF804FB 		ldr	pc, [sp], #4
 145              	.L12:
 146              		.align	2
 147              	.L11:
 148 001c 00540040 		.word	1073763328
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 10


 149              		.cfi_endproc
 150              	.LFE4:
 152              		.section	.text.ssd1306_WriteData,"ax",%progbits
 153              		.align	1
 154              		.global	ssd1306_WriteData
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu fpv5-d16
 160              	ssd1306_WriteData:
 161              	.LFB5:
  30:../SSD1306/ssd1306/ssd1306.c ****        //command=0x40 (control byte) : Co=0 D/C=1 + 6 '0's
 162              		.loc 1 30 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              	.LVL10:
 167 0000 00B5     		push	{lr}
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 4
 170              		.cfi_offset 14, -4
 171 0002 83B0     		sub	sp, sp, #12
 172              	.LCFI4:
 173              		.cfi_def_cfa_offset 16
  32:../SSD1306/ssd1306/ssd1306.c ****     
 174              		.loc 1 32 0
 175 0004 0123     		movs	r3, #1
 176 0006 0193     		str	r3, [sp, #4]
 177 0008 0091     		str	r1, [sp]
 178 000a 0346     		mov	r3, r0
 179 000c 4022     		movs	r2, #64
 180 000e 7821     		movs	r1, #120
 181              	.LVL11:
 182 0010 0248     		ldr	r0, .L15
 183              	.LVL12:
 184 0012 FFF7FEFF 		bl	i2c_xfer7
 185              	.LVL13:
  34:../SSD1306/ssd1306/ssd1306.c **** 
 186              		.loc 1 34 0
 187 0016 03B0     		add	sp, sp, #12
 188              	.LCFI5:
 189              		.cfi_def_cfa_offset 4
 190              		@ sp needed
 191 0018 5DF804FB 		ldr	pc, [sp], #4
 192              	.L16:
 193              		.align	2
 194              	.L15:
 195 001c 00540040 		.word	1073763328
 196              		.cfi_endproc
 197              	.LFE5:
 199              		.section	.text.ssd1306_FillBuffer,"ax",%progbits
 200              		.align	1
 201              		.global	ssd1306_FillBuffer
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 205              		.fpu fpv5-d16
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 11


 207              	ssd1306_FillBuffer:
 208              	.LFB6:
  77:../SSD1306/ssd1306/ssd1306.c ****     SSD1306_Error_t ret = SSD1306_ERR;
 209              		.loc 1 77 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              	.LVL14:
  79:../SSD1306/ssd1306/ssd1306.c ****         memcpy(SSD1306_Buffer,buf,len);
 214              		.loc 1 79 0
 215 0000 B1F5007F 		cmp	r1, #512
 216 0004 01D9     		bls	.L24
  78:../SSD1306/ssd1306/ssd1306.c ****     if (len <= SSD1306_BUFFER_SIZE) {
 217              		.loc 1 78 0
 218 0006 0120     		movs	r0, #1
 219              	.LVL15:
  84:../SSD1306/ssd1306/ssd1306.c **** 
 220              		.loc 1 84 0
 221 0008 7047     		bx	lr
 222              	.LVL16:
 223              	.L24:
  77:../SSD1306/ssd1306/ssd1306.c ****     SSD1306_Error_t ret = SSD1306_ERR;
 224              		.loc 1 77 0
 225 000a 08B5     		push	{r3, lr}
 226              	.LCFI6:
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 3, -8
 229              		.cfi_offset 14, -4
 230 000c 0A46     		mov	r2, r1
 231 000e 0146     		mov	r1, r0
 232              	.LVL17:
  80:../SSD1306/ssd1306/ssd1306.c ****         ret = SSD1306_OK;
 233              		.loc 1 80 0
 234 0010 0248     		ldr	r0, .L25
 235              	.LVL18:
 236 0012 FFF7FEFF 		bl	memcpy
 237              	.LVL19:
  81:../SSD1306/ssd1306/ssd1306.c ****     }
 238              		.loc 1 81 0
 239 0016 0020     		movs	r0, #0
 240              	.LVL20:
  84:../SSD1306/ssd1306/ssd1306.c **** 
 241              		.loc 1 84 0
 242 0018 08BD     		pop	{r3, pc}
 243              	.L26:
 244 001a 00BF     		.align	2
 245              	.L25:
 246 001c 00000000 		.word	.LANCHOR0
 247              		.cfi_endproc
 248              	.LFE6:
 250              		.section	.text.ssd1306_Fill,"ax",%progbits
 251              		.align	1
 252              		.global	ssd1306_Fill
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv5-d16
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 12


 258              	ssd1306_Fill:
 259              	.LFB8:
 189:../SSD1306/ssd1306/ssd1306.c ****     /* Set memory */
 260              		.loc 1 189 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 265              	.LVL21:
 193:../SSD1306/ssd1306/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 266              		.loc 1 193 0
 267 0000 0023     		movs	r3, #0
 268 0002 03E0     		b	.L28
 269              	.LVL22:
 270              	.L31:
 194:../SSD1306/ssd1306/ssd1306.c ****     }
 271              		.loc 1 194 0
 272 0004 FF21     		movs	r1, #255
 273              	.L29:
 194:../SSD1306/ssd1306/ssd1306.c ****     }
 274              		.loc 1 194 0 is_stmt 0 discriminator 4
 275 0006 054A     		ldr	r2, .L33
 276 0008 D154     		strb	r1, [r2, r3]
 193:../SSD1306/ssd1306/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 277              		.loc 1 193 0 is_stmt 1 discriminator 4
 278 000a 0133     		adds	r3, r3, #1
 279              	.LVL23:
 280              	.L28:
 193:../SSD1306/ssd1306/ssd1306.c ****         SSD1306_Buffer[i] = (color == Black) ? 0x00 : 0xFF;
 281              		.loc 1 193 0 is_stmt 0 discriminator 2
 282 000c B3F5007F 		cmp	r3, #512
 283 0010 03D2     		bcs	.L32
 194:../SSD1306/ssd1306/ssd1306.c ****     }
 284              		.loc 1 194 0 is_stmt 1
 285 0012 0028     		cmp	r0, #0
 286 0014 F6D1     		bne	.L31
 287 0016 0021     		movs	r1, #0
 288 0018 F5E7     		b	.L29
 289              	.L32:
 196:../SSD1306/ssd1306/ssd1306.c **** 
 290              		.loc 1 196 0
 291 001a 7047     		bx	lr
 292              	.L34:
 293              		.align	2
 294              	.L33:
 295 001c 00000000 		.word	.LANCHOR0
 296              		.cfi_endproc
 297              	.LFE8:
 299              		.section	.text.ssd1306_UpdateScreen,"ax",%progbits
 300              		.align	1
 301              		.global	ssd1306_UpdateScreen
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu fpv5-d16
 307              	ssd1306_UpdateScreen:
 308              	.LFB9:
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 13


 199:../SSD1306/ssd1306/ssd1306.c ****     // Write data to each page of RAM. Number of pages
 309              		.loc 1 199 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313 0000 10B5     		push	{r4, lr}
 314              	.LCFI7:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 4, -8
 317              		.cfi_offset 14, -4
 318              	.LVL24:
 319              	.LBB2:
 206:../SSD1306/ssd1306/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 320              		.loc 1 206 0
 321 0002 0024     		movs	r4, #0
 322 0004 12E0     		b	.L36
 323              	.LVL25:
 324              	.L37:
 207:../SSD1306/ssd1306/ssd1306.c ****         ssd1306_WriteCommand(0x00);
 325              		.loc 1 207 0 discriminator 3
 326 0006 A4F15000 		sub	r0, r4, #80
 327 000a C0B2     		uxtb	r0, r0
 328 000c FFF7FEFF 		bl	ssd1306_WriteCommand
 329              	.LVL26:
 208:../SSD1306/ssd1306/ssd1306.c ****         ssd1306_WriteCommand(0x10);
 330              		.loc 1 208 0 discriminator 3
 331 0010 0020     		movs	r0, #0
 332 0012 FFF7FEFF 		bl	ssd1306_WriteCommand
 333              	.LVL27:
 209:../SSD1306/ssd1306/ssd1306.c ****         ssd1306_WriteData(&SSD1306_Buffer[SSD1306_WIDTH*i],SSD1306_WIDTH);
 334              		.loc 1 209 0 discriminator 3
 335 0016 1020     		movs	r0, #16
 336 0018 FFF7FEFF 		bl	ssd1306_WriteCommand
 337              	.LVL28:
 210:../SSD1306/ssd1306/ssd1306.c ****     }
 338              		.loc 1 210 0 discriminator 3
 339 001c 8021     		movs	r1, #128
 340 001e 0548     		ldr	r0, .L39
 341 0020 00EBC410 		add	r0, r0, r4, lsl #7
 342 0024 FFF7FEFF 		bl	ssd1306_WriteData
 343              	.LVL29:
 206:../SSD1306/ssd1306/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 344              		.loc 1 206 0 discriminator 3
 345 0028 0134     		adds	r4, r4, #1
 346              	.LVL30:
 347 002a E4B2     		uxtb	r4, r4
 348              	.LVL31:
 349              	.L36:
 206:../SSD1306/ssd1306/ssd1306.c ****         ssd1306_WriteCommand(0xB0 + i); // Set the current RAM page address.
 350              		.loc 1 206 0 is_stmt 0 discriminator 1
 351 002c 032C     		cmp	r4, #3
 352 002e EAD9     		bls	.L37
 353              	.LBE2:
 212:../SSD1306/ssd1306/ssd1306.c **** 
 354              		.loc 1 212 0 is_stmt 1
 355 0030 10BD     		pop	{r4, pc}
 356              	.LVL32:
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 14


 357              	.L40:
 358 0032 00BF     		.align	2
 359              	.L39:
 360 0034 00000000 		.word	.LANCHOR0
 361              		.cfi_endproc
 362              	.LFE9:
 364              		.section	.text.ssd1306_DrawPixel,"ax",%progbits
 365              		.align	1
 366              		.global	ssd1306_DrawPixel
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu fpv5-d16
 372              	ssd1306_DrawPixel:
 373              	.LFB10:
 218:../SSD1306/ssd1306/ssd1306.c ****     if(x >= SSD1306_WIDTH || y >= SSD1306_HEIGHT) {
 374              		.loc 1 218 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 379              	.LVL33:
 219:../SSD1306/ssd1306/ssd1306.c ****         // Don't write outside the buffer
 380              		.loc 1 219 0
 381 0000 1F29     		cmp	r1, #31
 382 0002 94BF     		ite	ls
 383 0004 0023     		movls	r3, #0
 384 0006 0123     		movhi	r3, #1
 385 0008 53EAD013 		orrs	r3, r3, r0, lsr #7
 386 000c 13D1     		bne	.L41
 225:../SSD1306/ssd1306/ssd1306.c ****         color = (SSD1306_COLOR)!color;
 387              		.loc 1 225 0
 388 000e 104B     		ldr	r3, .L46
 389 0010 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 390 0012 13B1     		cbz	r3, .L43
 226:../SSD1306/ssd1306/ssd1306.c ****     }
 391              		.loc 1 226 0
 392 0014 B2FA82F2 		clz	r2, r2
 393              	.LVL34:
 394 0018 5209     		lsrs	r2, r2, #5
 395              	.LVL35:
 396              	.L43:
 230:../SSD1306/ssd1306/ssd1306.c ****         SSD1306_Buffer[x + (y / 8) * SSD1306_WIDTH] |= 1 << (y % 8);
 397              		.loc 1 230 0
 398 001a 012A     		cmp	r2, #1
 399 001c 0CD0     		beq	.L45
 233:../SSD1306/ssd1306/ssd1306.c ****     }
 400              		.loc 1 233 0
 401 001e CB08     		lsrs	r3, r1, #3
 402 0020 00EBC310 		add	r0, r0, r3, lsl #7
 403              	.LVL36:
 404 0024 01F00701 		and	r1, r1, #7
 405              	.LVL37:
 406 0028 0123     		movs	r3, #1
 407 002a 8B40     		lsls	r3, r3, r1
 408 002c 094A     		ldr	r2, .L46+4
 409              	.LVL38:
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 15


 410 002e 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 411 0030 21EA0301 		bic	r1, r1, r3
 412 0034 1154     		strb	r1, [r2, r0]
 413              	.L41:
 235:../SSD1306/ssd1306/ssd1306.c **** 
 414              		.loc 1 235 0
 415 0036 7047     		bx	lr
 416              	.LVL39:
 417              	.L45:
 231:../SSD1306/ssd1306/ssd1306.c ****     } else { 
 418              		.loc 1 231 0
 419 0038 CB08     		lsrs	r3, r1, #3
 420 003a 00EBC310 		add	r0, r0, r3, lsl #7
 421              	.LVL40:
 422 003e 01F00701 		and	r1, r1, #7
 423              	.LVL41:
 424 0042 0123     		movs	r3, #1
 425 0044 8B40     		lsls	r3, r3, r1
 426 0046 034A     		ldr	r2, .L46+4
 427              	.LVL42:
 428 0048 115C     		ldrb	r1, [r2, r0]	@ zero_extendqisi2
 429 004a 1943     		orrs	r1, r1, r3
 430 004c 1154     		strb	r1, [r2, r0]
 431 004e 7047     		bx	lr
 432              	.L47:
 433              		.align	2
 434              	.L46:
 435 0050 00000000 		.word	.LANCHOR1
 436 0054 00000000 		.word	.LANCHOR0
 437              		.cfi_endproc
 438              	.LFE10:
 440              		.section	.text.ssd1306_WriteChar,"ax",%progbits
 441              		.align	1
 442              		.global	ssd1306_WriteChar
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu fpv5-d16
 448              	ssd1306_WriteChar:
 449              	.LFB11:
 241:../SSD1306/ssd1306/ssd1306.c ****     uint32_t i, b, j;
 450              		.loc 1 241 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 8
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              	.LVL43:
 455 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 456              	.LCFI8:
 457              		.cfi_def_cfa_offset 36
 458              		.cfi_offset 4, -36
 459              		.cfi_offset 5, -32
 460              		.cfi_offset 6, -28
 461              		.cfi_offset 7, -24
 462              		.cfi_offset 8, -20
 463              		.cfi_offset 9, -16
 464              		.cfi_offset 10, -12
 465              		.cfi_offset 11, -8
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 16


 466              		.cfi_offset 14, -4
 467 0004 83B0     		sub	sp, sp, #12
 468              	.LCFI9:
 469              		.cfi_def_cfa_offset 48
 470 0006 02AC     		add	r4, sp, #8
 471 0008 04E90600 		stmdb	r4, {r1, r2}
 245:../SSD1306/ssd1306/ssd1306.c ****         return 0;
 472              		.loc 1 245 0
 473 000c A0F12002 		sub	r2, r0, #32
 474 0010 D2B2     		uxtb	r2, r2
 475 0012 5E2A     		cmp	r2, #94
 476 0014 43D8     		bhi	.L56
 249:../SSD1306/ssd1306/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 477              		.loc 1 249 0
 478 0016 264A     		ldr	r2, .L62
 479 0018 1288     		ldrh	r2, [r2]
 480 001a 9DF80060 		ldrb	r6, [sp]	@ zero_extendqisi2
 481 001e 3244     		add	r2, r2, r6
 482 0020 802A     		cmp	r2, #128
 483 0022 40DC     		bgt	.L57
 250:../SSD1306/ssd1306/ssd1306.c ****     {
 484              		.loc 1 250 0 discriminator 1
 485 0024 224A     		ldr	r2, .L62
 486 0026 5288     		ldrh	r2, [r2, #2]
 487 0028 9DF801A0 		ldrb	r10, [sp, #1]	@ zero_extendqisi2
 488 002c D346     		mov	fp, r10
 489 002e 5244     		add	r2, r2, r10
 249:../SSD1306/ssd1306/ssd1306.c ****         SSD1306_HEIGHT < (SSD1306.CurrentY + Font.FontHeight))
 490              		.loc 1 249 0 discriminator 1
 491 0030 202A     		cmp	r2, #32
 492 0032 3ADC     		bgt	.L58
 493 0034 1F46     		mov	r7, r3
 494 0036 8146     		mov	r9, r0
 257:../SSD1306/ssd1306/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 495              		.loc 1 257 0
 496 0038 0025     		movs	r5, #0
 497 003a 1FE0     		b	.L50
 498              	.LVL44:
 499              	.L52:
 263:../SSD1306/ssd1306/ssd1306.c ****             }
 500              		.loc 1 263 0
 501 003c 1C4B     		ldr	r3, .L62
 502 003e 1888     		ldrh	r0, [r3]
 503 0040 5988     		ldrh	r1, [r3, #2]
 504 0042 2944     		add	r1, r1, r5
 505 0044 2044     		add	r0, r0, r4
 506 0046 B7FA87F2 		clz	r2, r7
 507 004a 5209     		lsrs	r2, r2, #5
 508 004c C9B2     		uxtb	r1, r1
 509 004e C0B2     		uxtb	r0, r0
 510 0050 FFF7FEFF 		bl	ssd1306_DrawPixel
 511              	.LVL45:
 512              	.L53:
 259:../SSD1306/ssd1306/ssd1306.c ****             if((b << j) & 0x8000)  {
 513              		.loc 1 259 0 discriminator 2
 514 0054 0134     		adds	r4, r4, #1
 515              	.LVL46:
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 17


 516              	.L51:
 259:../SSD1306/ssd1306/ssd1306.c ****             if((b << j) & 0x8000)  {
 517              		.loc 1 259 0 is_stmt 0 discriminator 1
 518 0056 A642     		cmp	r6, r4
 519 0058 0FD9     		bls	.L60
 260:../SSD1306/ssd1306/ssd1306.c ****                 ssd1306_DrawPixel(SSD1306.CurrentX + j, (SSD1306.CurrentY + i), (SSD1306_COLOR) col
 520              		.loc 1 260 0 is_stmt 1
 521 005a 08FA04F3 		lsl	r3, r8, r4
 522 005e 13F4004F 		tst	r3, #32768
 523 0062 EBD0     		beq	.L52
 261:../SSD1306/ssd1306/ssd1306.c ****             } else {
 524              		.loc 1 261 0
 525 0064 124B     		ldr	r3, .L62
 526 0066 1888     		ldrh	r0, [r3]
 527 0068 5988     		ldrh	r1, [r3, #2]
 528 006a 2944     		add	r1, r1, r5
 529 006c 2044     		add	r0, r0, r4
 530 006e 3A46     		mov	r2, r7
 531 0070 C9B2     		uxtb	r1, r1
 532 0072 C0B2     		uxtb	r0, r0
 533 0074 FFF7FEFF 		bl	ssd1306_DrawPixel
 534              	.LVL47:
 535 0078 ECE7     		b	.L53
 536              	.L60:
 257:../SSD1306/ssd1306/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 537              		.loc 1 257 0 discriminator 2
 538 007a 0135     		adds	r5, r5, #1
 539              	.LVL48:
 540              	.L50:
 257:../SSD1306/ssd1306/ssd1306.c ****         b = Font.data[(ch - 32) * Font.FontHeight + i];
 541              		.loc 1 257 0 is_stmt 0 discriminator 1
 542 007c AA45     		cmp	r10, r5
 543 007e 08D9     		bls	.L61
 258:../SSD1306/ssd1306/ssd1306.c ****         for(j = 0; j < Font.FontWidth; j++) {
 544              		.loc 1 258 0 is_stmt 1
 545 0080 A9F12003 		sub	r3, r9, #32
 546 0084 03FB0B53 		mla	r3, r3, fp, r5
 547 0088 019A     		ldr	r2, [sp, #4]
 548 008a 32F81380 		ldrh	r8, [r2, r3, lsl #1]
 549              	.LVL49:
 259:../SSD1306/ssd1306/ssd1306.c ****             if((b << j) & 0x8000)  {
 550              		.loc 1 259 0
 551 008e 0024     		movs	r4, #0
 552 0090 E1E7     		b	.L51
 553              	.LVL50:
 554              	.L61:
 269:../SSD1306/ssd1306/ssd1306.c ****     
 555              		.loc 1 269 0
 556 0092 074B     		ldr	r3, .L62
 557 0094 1A88     		ldrh	r2, [r3]
 558 0096 1644     		add	r6, r6, r2
 559 0098 1E80     		strh	r6, [r3]	@ movhi
 272:../SSD1306/ssd1306/ssd1306.c **** }
 560              		.loc 1 272 0
 561 009a 4846     		mov	r0, r9
 562 009c 00E0     		b	.L49
 563              	.LVL51:
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 18


 564              	.L56:
 246:../SSD1306/ssd1306/ssd1306.c ****     
 565              		.loc 1 246 0
 566 009e 0020     		movs	r0, #0
 567              	.LVL52:
 568              	.L49:
 273:../SSD1306/ssd1306/ssd1306.c **** 
 569              		.loc 1 273 0
 570 00a0 03B0     		add	sp, sp, #12
 571              	.LCFI10:
 572              		.cfi_remember_state
 573              		.cfi_def_cfa_offset 36
 574              		@ sp needed
 575 00a2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 576              	.LVL53:
 577              	.L57:
 578              	.LCFI11:
 579              		.cfi_restore_state
 253:../SSD1306/ssd1306/ssd1306.c ****     }
 580              		.loc 1 253 0
 581 00a6 0020     		movs	r0, #0
 582              	.LVL54:
 583 00a8 FAE7     		b	.L49
 584              	.LVL55:
 585              	.L58:
 586 00aa 0020     		movs	r0, #0
 587              	.LVL56:
 588 00ac F8E7     		b	.L49
 589              	.L63:
 590 00ae 00BF     		.align	2
 591              	.L62:
 592 00b0 00000000 		.word	.LANCHOR1
 593              		.cfi_endproc
 594              	.LFE11:
 596              		.section	.text.ssd1306_WriteString,"ax",%progbits
 597              		.align	1
 598              		.global	ssd1306_WriteString
 599              		.syntax unified
 600              		.thumb
 601              		.thumb_func
 602              		.fpu fpv5-d16
 604              	ssd1306_WriteString:
 605              	.LFB12:
 276:../SSD1306/ssd1306/ssd1306.c ****     // Write until null-byte
 606              		.loc 1 276 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 8
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610              	.LVL57:
 611 0000 70B5     		push	{r4, r5, r6, lr}
 612              	.LCFI12:
 613              		.cfi_def_cfa_offset 16
 614              		.cfi_offset 4, -16
 615              		.cfi_offset 5, -12
 616              		.cfi_offset 6, -8
 617              		.cfi_offset 14, -4
 618 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 19


 619              	.LCFI13:
 620              		.cfi_def_cfa_offset 24
 621 0004 0546     		mov	r5, r0
 622 0006 02A8     		add	r0, sp, #8
 623              	.LVL58:
 624 0008 00E90600 		stmdb	r0, {r1, r2}
 625 000c 1E46     		mov	r6, r3
 626              	.LVL59:
 627              	.L65:
 278:../SSD1306/ssd1306/ssd1306.c ****         if (ssd1306_WriteChar(*str, Font, color) != *str) {
 628              		.loc 1 278 0
 629 000e 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 630 0010 5CB1     		cbz	r4, .L66
 279:../SSD1306/ssd1306/ssd1306.c ****             // Char could not be written
 631              		.loc 1 279 0
 632 0012 3346     		mov	r3, r6
 633 0014 02AA     		add	r2, sp, #8
 634 0016 12E90600 		ldmdb	r2, {r1, r2}
 635 001a 2046     		mov	r0, r4
 636 001c FFF7FEFF 		bl	ssd1306_WriteChar
 637              	.LVL60:
 638 0020 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 639 0022 A042     		cmp	r0, r4
 640 0024 01D1     		bne	.L66
 285:../SSD1306/ssd1306/ssd1306.c ****     }
 641              		.loc 1 285 0
 642 0026 0135     		adds	r5, r5, #1
 643              	.LVL61:
 644 0028 F1E7     		b	.L65
 645              	.L66:
 290:../SSD1306/ssd1306/ssd1306.c **** 
 646              		.loc 1 290 0
 647 002a 2046     		mov	r0, r4
 648 002c 02B0     		add	sp, sp, #8
 649              	.LCFI14:
 650              		.cfi_def_cfa_offset 16
 651              		@ sp needed
 652 002e 70BD     		pop	{r4, r5, r6, pc}
 653              		.cfi_endproc
 654              	.LFE12:
 656              		.section	.text.ssd1306_SetCursor,"ax",%progbits
 657              		.align	1
 658              		.global	ssd1306_SetCursor
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 662              		.fpu fpv5-d16
 664              	ssd1306_SetCursor:
 665              	.LFB13:
 293:../SSD1306/ssd1306/ssd1306.c ****     SSD1306.CurrentX = x;
 666              		.loc 1 293 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 0
 669              		@ frame_needed = 0, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 671              	.LVL62:
 294:../SSD1306/ssd1306/ssd1306.c ****     SSD1306.CurrentY = y;
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 20


 672              		.loc 1 294 0
 673 0000 014B     		ldr	r3, .L70
 674 0002 1880     		strh	r0, [r3]	@ movhi
 295:../SSD1306/ssd1306/ssd1306.c **** }
 675              		.loc 1 295 0
 676 0004 5980     		strh	r1, [r3, #2]	@ movhi
 296:../SSD1306/ssd1306/ssd1306.c **** 
 677              		.loc 1 296 0
 678 0006 7047     		bx	lr
 679              	.L71:
 680              		.align	2
 681              	.L70:
 682 0008 00000000 		.word	.LANCHOR1
 683              		.cfi_endproc
 684              	.LFE13:
 686              		.section	.text.ssd1306_Line,"ax",%progbits
 687              		.align	1
 688              		.global	ssd1306_Line
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 692              		.fpu fpv5-d16
 694              	ssd1306_Line:
 695              	.LFB14:
 299:../SSD1306/ssd1306/ssd1306.c ****   int32_t deltaX = abs(x2 - x1);
 696              		.loc 1 299 0
 697              		.cfi_startproc
 698              		@ args = 4, pretend = 0, frame = 8
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700              	.LVL63:
 701 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 702              	.LCFI15:
 703              		.cfi_def_cfa_offset 36
 704              		.cfi_offset 4, -36
 705              		.cfi_offset 5, -32
 706              		.cfi_offset 6, -28
 707              		.cfi_offset 7, -24
 708              		.cfi_offset 8, -20
 709              		.cfi_offset 9, -16
 710              		.cfi_offset 10, -12
 711              		.cfi_offset 11, -8
 712              		.cfi_offset 14, -4
 713 0004 83B0     		sub	sp, sp, #12
 714              	.LCFI16:
 715              		.cfi_def_cfa_offset 48
 716 0006 0446     		mov	r4, r0
 717 0008 0D46     		mov	r5, r1
 718 000a 9146     		mov	r9, r2
 719 000c 9A46     		mov	r10, r3
 720 000e 9DF83030 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 721              	.LVL64:
 722 0012 0093     		str	r3, [sp]
 300:../SSD1306/ssd1306/ssd1306.c ****   int32_t deltaY = abs(y2 - y1);
 723              		.loc 1 300 0
 724 0014 A2EB0008 		sub	r8, r2, r0
 725 0018 B8F1000F 		cmp	r8, #0
 726 001c B8BF     		it	lt
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 21


 727 001e C8F10008 		rsblt	r8, r8, #0
 728              	.LVL65:
 301:../SSD1306/ssd1306/ssd1306.c ****   int32_t signX = ((x1 < x2) ? 1 : -1);
 729              		.loc 1 301 0
 730 0022 AAEB0107 		sub	r7, r10, r1
 731 0026 002F     		cmp	r7, #0
 732 0028 B8BF     		it	lt
 733 002a 7F42     		rsblt	r7, r7, #0
 734              	.LVL66:
 302:../SSD1306/ssd1306/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 735              		.loc 1 302 0
 736 002c 8242     		cmp	r2, r0
 737 002e 23D9     		bls	.L79
 738 0030 0123     		movs	r3, #1
 739 0032 0193     		str	r3, [sp, #4]
 740              	.L73:
 741              	.LVL67:
 303:../SSD1306/ssd1306/ssd1306.c ****   int32_t error = deltaX - deltaY;
 742              		.loc 1 303 0 discriminator 4
 743 0034 AA45     		cmp	r10, r5
 744 0036 23D9     		bls	.L80
 303:../SSD1306/ssd1306/ssd1306.c ****   int32_t error = deltaX - deltaY;
 745              		.loc 1 303 0 is_stmt 0
 746 0038 4FF0010B 		mov	fp, #1
 747              	.L74:
 748              	.LVL68:
 304:../SSD1306/ssd1306/ssd1306.c ****   int32_t error2;
 749              		.loc 1 304 0 is_stmt 1 discriminator 4
 750 003c A8EB0706 		sub	r6, r8, r7
 751              	.LVL69:
 307:../SSD1306/ssd1306/ssd1306.c ****     while((x1 != x2) || (y1 != y2))
 752              		.loc 1 307 0 discriminator 4
 753 0040 009A     		ldr	r2, [sp]
 754              	.LVL70:
 755 0042 5146     		mov	r1, r10
 756              	.LVL71:
 757 0044 4846     		mov	r0, r9
 758              	.LVL72:
 759 0046 FFF7FEFF 		bl	ssd1306_DrawPixel
 760              	.LVL73:
 761              	.L75:
 308:../SSD1306/ssd1306/ssd1306.c ****     {
 762              		.loc 1 308 0
 763 004a 5545     		cmp	r5, r10
 764 004c 08BF     		it	eq
 765 004e 4C45     		cmpeq	r4, r9
 766 0050 19D0     		beq	.L82
 310:../SSD1306/ssd1306/ssd1306.c ****     error2 = error * 2;
 767              		.loc 1 310 0
 768 0052 009A     		ldr	r2, [sp]
 769 0054 2946     		mov	r1, r5
 770 0056 2046     		mov	r0, r4
 771 0058 FFF7FEFF 		bl	ssd1306_DrawPixel
 772              	.LVL74:
 311:../SSD1306/ssd1306/ssd1306.c ****     if(error2 > -deltaY)
 773              		.loc 1 311 0
 774 005c 7300     		lsls	r3, r6, #1
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 22


 775              	.LVL75:
 312:../SSD1306/ssd1306/ssd1306.c ****     {
 776              		.loc 1 312 0
 777 005e 7A42     		negs	r2, r7
 778 0060 9A42     		cmp	r2, r3
 779 0062 03DA     		bge	.L76
 314:../SSD1306/ssd1306/ssd1306.c ****       x1 += signX;
 780              		.loc 1 314 0
 781 0064 F61B     		subs	r6, r6, r7
 782              	.LVL76:
 315:../SSD1306/ssd1306/ssd1306.c ****     }
 783              		.loc 1 315 0
 784 0066 019A     		ldr	r2, [sp, #4]
 785 0068 1444     		add	r4, r4, r2
 786              	.LVL77:
 787 006a E4B2     		uxtb	r4, r4
 788              	.LVL78:
 789              	.L76:
 322:../SSD1306/ssd1306/ssd1306.c ****     {
 790              		.loc 1 322 0
 791 006c 9845     		cmp	r8, r3
 792 006e ECDD     		ble	.L75
 324:../SSD1306/ssd1306/ssd1306.c ****       y1 += signY;
 793              		.loc 1 324 0
 794 0070 4644     		add	r6, r6, r8
 795              	.LVL79:
 325:../SSD1306/ssd1306/ssd1306.c ****     }
 796              		.loc 1 325 0
 797 0072 5D44     		add	r5, r5, fp
 798              	.LVL80:
 799 0074 EDB2     		uxtb	r5, r5
 800              	.LVL81:
 801 0076 E8E7     		b	.L75
 802              	.LVL82:
 803              	.L79:
 302:../SSD1306/ssd1306/ssd1306.c ****   int32_t signY = ((y1 < y2) ? 1 : -1);
 804              		.loc 1 302 0
 805 0078 4FF0FF33 		mov	r3, #-1
 806 007c 0193     		str	r3, [sp, #4]
 807 007e D9E7     		b	.L73
 808              	.LVL83:
 809              	.L80:
 303:../SSD1306/ssd1306/ssd1306.c ****   int32_t error = deltaX - deltaY;
 810              		.loc 1 303 0
 811 0080 4FF0FF3B 		mov	fp, #-1
 812 0084 DAE7     		b	.L74
 813              	.LVL84:
 814              	.L82:
 333:../SSD1306/ssd1306/ssd1306.c **** //Draw polyline
 815              		.loc 1 333 0
 816 0086 03B0     		add	sp, sp, #12
 817              	.LCFI17:
 818              		.cfi_def_cfa_offset 36
 819              		@ sp needed
 820 0088 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 821              		.cfi_endproc
 822              	.LFE14:
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 23


 824              		.section	.text.ssd1306_Polyline,"ax",%progbits
 825              		.align	1
 826              		.global	ssd1306_Polyline
 827              		.syntax unified
 828              		.thumb
 829              		.thumb_func
 830              		.fpu fpv5-d16
 832              	ssd1306_Polyline:
 833              	.LFB15:
 335:../SSD1306/ssd1306/ssd1306.c ****   uint16_t i;
 834              		.loc 1 335 0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 838              	.LVL85:
 337:../SSD1306/ssd1306/ssd1306.c ****     for(i = 1; i < par_size; i++){
 839              		.loc 1 337 0
 840 0000 38B1     		cbz	r0, .L91
 335:../SSD1306/ssd1306/ssd1306.c ****   uint16_t i;
 841              		.loc 1 335 0
 842 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 843              	.LCFI18:
 844              		.cfi_def_cfa_offset 24
 845              		.cfi_offset 4, -24
 846              		.cfi_offset 5, -20
 847              		.cfi_offset 6, -16
 848              		.cfi_offset 7, -12
 849              		.cfi_offset 8, -8
 850              		.cfi_offset 14, -4
 851 0006 82B0     		sub	sp, sp, #8
 852              	.LCFI19:
 853              		.cfi_def_cfa_offset 32
 854 0008 0646     		mov	r6, r0
 855 000a 9046     		mov	r8, r2
 856 000c 0F46     		mov	r7, r1
 338:../SSD1306/ssd1306/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 857              		.loc 1 338 0
 858 000e 0124     		movs	r4, #1
 859 0010 13E0     		b	.L84
 860              	.L91:
 861              	.LCFI20:
 862              		.cfi_def_cfa_offset 0
 863              		.cfi_restore 4
 864              		.cfi_restore 5
 865              		.cfi_restore 6
 866              		.cfi_restore 7
 867              		.cfi_restore 8
 868              		.cfi_restore 14
 869 0012 7047     		bx	lr
 870              	.LVL86:
 871              	.L86:
 872              	.LCFI21:
 873              		.cfi_def_cfa_offset 32
 874              		.cfi_offset 4, -24
 875              		.cfi_offset 5, -20
 876              		.cfi_offset 6, -16
 877              		.cfi_offset 7, -12
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 24


 878              		.cfi_offset 8, -8
 879              		.cfi_offset 14, -4
 339:../SSD1306/ssd1306/ssd1306.c ****     }
 880              		.loc 1 339 0 discriminator 3
 881 0014 6FF00045 		mvn	r5, #-2147483648
 882 0018 2544     		add	r5, r5, r4
 883 001a 06EB4501 		add	r1, r6, r5, lsl #1
 884 001e 06EB4403 		add	r3, r6, r4, lsl #1
 885 0022 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 886 0024 16F81420 		ldrb	r2, [r6, r4, lsl #1]	@ zero_extendqisi2
 887 0028 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 888 002a 16F81500 		ldrb	r0, [r6, r5, lsl #1]	@ zero_extendqisi2
 889 002e CDF80080 		str	r8, [sp]
 890 0032 FFF7FEFF 		bl	ssd1306_Line
 891              	.LVL87:
 338:../SSD1306/ssd1306/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 892              		.loc 1 338 0 discriminator 3
 893 0036 0134     		adds	r4, r4, #1
 894              	.LVL88:
 895 0038 A4B2     		uxth	r4, r4
 896              	.LVL89:
 897              	.L84:
 338:../SSD1306/ssd1306/ssd1306.c ****       ssd1306_Line(par_vertex[i - 1].x, par_vertex[i - 1].y, par_vertex[i].x, par_vertex[i].y, colo
 898              		.loc 1 338 0 is_stmt 0 discriminator 1
 899 003a BC42     		cmp	r4, r7
 900 003c EAD3     		bcc	.L86
 347:../SSD1306/ssd1306/ssd1306.c **** /*Convert Degrees to Radians*/
 901              		.loc 1 347 0 is_stmt 1
 902 003e 02B0     		add	sp, sp, #8
 903              	.LCFI22:
 904              		.cfi_def_cfa_offset 24
 905              		@ sp needed
 906 0040 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 907              		.cfi_endproc
 908              	.LFE15:
 910              		.section	.text.ssd1306_DrawArc,"ax",%progbits
 911              		.align	1
 912              		.global	ssd1306_DrawArc
 913              		.syntax unified
 914              		.thumb
 915              		.thumb_func
 916              		.fpu fpv5-d16
 918              	ssd1306_DrawArc:
 919              	.LFB18:
 366:../SSD1306/ssd1306/ssd1306.c **** /*DrawArc. Draw angle is beginning from 4 quart of trigonometric circle (3pi/2)
 367:../SSD1306/ssd1306/ssd1306.c ****  * start_angle in degree
 368:../SSD1306/ssd1306/ssd1306.c ****  * sweep in degree
 369:../SSD1306/ssd1306/ssd1306.c ****  */
 370:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_DrawArc(uint8_t x, uint8_t y, uint8_t radius, uint16_t start_angle, uint16_t sweep, SS
 920              		.loc 1 370 0
 921              		.cfi_startproc
 922              		@ args = 8, pretend = 0, frame = 0
 923              		@ frame_needed = 0, uses_anonymous_args = 0
 924              	.LVL90:
 925 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 926              	.LCFI23:
 927              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 25


 928              		.cfi_offset 4, -36
 929              		.cfi_offset 5, -32
 930              		.cfi_offset 6, -28
 931              		.cfi_offset 7, -24
 932              		.cfi_offset 8, -20
 933              		.cfi_offset 9, -16
 934              		.cfi_offset 10, -12
 935              		.cfi_offset 11, -8
 936              		.cfi_offset 14, -4
 937 0004 2DED088B 		vpush.64	{d8, d9, d10, d11}
 938              	.LCFI24:
 939              		.cfi_def_cfa_offset 68
 940              		.cfi_offset 80, -68
 941              		.cfi_offset 81, -64
 942              		.cfi_offset 82, -60
 943              		.cfi_offset 83, -56
 944              		.cfi_offset 84, -52
 945              		.cfi_offset 85, -48
 946              		.cfi_offset 86, -44
 947              		.cfi_offset 87, -40
 948 0008 83B0     		sub	sp, sp, #12
 949              	.LCFI25:
 950              		.cfi_def_cfa_offset 80
 951 000a 8246     		mov	r10, r0
 952 000c 8946     		mov	r9, r1
 953 000e 0AEE902A 		vmov	s21, r2	@ int
 954 0012 1D46     		mov	r5, r3
 955 0014 9DF854B0 		ldrb	fp, [sp, #84]	@ zero_extendqisi2
 956              	.LVL91:
 371:../SSD1306/ssd1306/ssd1306.c ****     #define CIRCLE_APPROXIMATION_SEGMENTS 36
 372:../SSD1306/ssd1306/ssd1306.c ****     float approx_degree;
 373:../SSD1306/ssd1306/ssd1306.c ****     uint32_t approx_segments;
 374:../SSD1306/ssd1306/ssd1306.c ****     uint8_t xp1,xp2;
 375:../SSD1306/ssd1306/ssd1306.c ****     uint8_t yp1,yp2;
 376:../SSD1306/ssd1306/ssd1306.c ****     uint32_t count = 0;
 377:../SSD1306/ssd1306/ssd1306.c ****     uint32_t loc_sweep = 0;
 378:../SSD1306/ssd1306/ssd1306.c ****     float rad;
 379:../SSD1306/ssd1306/ssd1306.c ****     
 380:../SSD1306/ssd1306/ssd1306.c ****     loc_sweep = ssd1306_NormalizeTo0_360(sweep);
 957              		.loc 1 380 0
 958 0018 BDF85000 		ldrh	r0, [sp, #80]
 959              	.LVL92:
 960 001c FFF7FEFF 		bl	ssd1306_NormalizeTo0_360
 961              	.LVL93:
 962 0020 0446     		mov	r4, r0
 963              	.LVL94:
 381:../SSD1306/ssd1306/ssd1306.c ****     
 382:../SSD1306/ssd1306/ssd1306.c ****     count = (ssd1306_NormalizeTo0_360(start_angle) * CIRCLE_APPROXIMATION_SEGMENTS) / 360;
 964              		.loc 1 382 0
 965 0022 2846     		mov	r0, r5
 966              	.LVL95:
 967 0024 FFF7FEFF 		bl	ssd1306_NormalizeTo0_360
 968              	.LVL96:
 969 0028 00EBC000 		add	r0, r0, r0, lsl #3
 970 002c 8300     		lsls	r3, r0, #2
 971 002e 3E4F     		ldr	r7, .L99
 972 0030 87FB0327 		smull	r2, r7, r7, r3
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 26


 973 0034 1F44     		add	r7, r7, r3
 974 0036 DB17     		asrs	r3, r3, #31
 975 0038 C3EB2727 		rsb	r7, r3, r7, asr #8
 976              	.LVL97:
 383:../SSD1306/ssd1306/ssd1306.c ****     approx_segments = (loc_sweep * CIRCLE_APPROXIMATION_SEGMENTS) / 360;
 977              		.loc 1 383 0
 978 003c 04EBC403 		add	r3, r4, r4, lsl #3
 979 0040 4FEA8308 		lsl	r8, r3, #2
 980 0044 4FEAD808 		lsr	r8, r8, #3
 981 0048 384B     		ldr	r3, .L99+4
 982 004a A3FB0838 		umull	r3, r8, r3, r8
 983 004e 4FEA9808 		lsr	r8, r8, #2
 984              	.LVL98:
 384:../SSD1306/ssd1306/ssd1306.c ****     approx_degree = loc_sweep / (float)approx_segments;
 985              		.loc 1 384 0
 986 0052 07EE904A 		vmov	s15, r4	@ int
 987 0056 B8EE67BA 		vcvt.f32.u32	s22, s15
 988 005a 07EE908A 		vmov	s15, r8	@ int
 989 005e F8EE677A 		vcvt.f32.u32	s15, s15
 990 0062 8BEE27AA 		vdiv.f32	s20, s22, s15
 991              	.LVL99:
 385:../SSD1306/ssd1306/ssd1306.c ****     while(count < approx_segments)
 992              		.loc 1 385 0
 993 0066 26E0     		b	.L93
 994              	.LVL100:
 995              	.L94:
 386:../SSD1306/ssd1306/ssd1306.c ****     {
 387:../SSD1306/ssd1306/ssd1306.c ****         rad = ssd1306_DegToRad(count*approx_degree);
 388:../SSD1306/ssd1306/ssd1306.c ****         xp1 = x + (int8_t)(sin(rad)*radius);
 389:../SSD1306/ssd1306/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 390:../SSD1306/ssd1306/ssd1306.c ****         count++;
 391:../SSD1306/ssd1306/ssd1306.c ****         if(count != approx_segments)
 392:../SSD1306/ssd1306/ssd1306.c ****         {
 393:../SSD1306/ssd1306/ssd1306.c ****             rad = ssd1306_DegToRad(count*approx_degree);
 394:../SSD1306/ssd1306/ssd1306.c ****         }
 395:../SSD1306/ssd1306/ssd1306.c ****         else
 396:../SSD1306/ssd1306/ssd1306.c ****         {            
 397:../SSD1306/ssd1306/ssd1306.c ****             rad = ssd1306_DegToRad(loc_sweep);
 996              		.loc 1 397 0
 997 0068 B0EE4B0A 		vmov.f32	s0, s22
 998 006c FFF7FEFF 		bl	ssd1306_DegToRad
 999              	.LVL101:
 1000              	.L95:
 398:../SSD1306/ssd1306/ssd1306.c ****         }
 399:../SSD1306/ssd1306/ssd1306.c ****         xp2 = x + (int8_t)(sin(rad)*radius);
 1001              		.loc 1 399 0
 1002 0070 B7EEC09A 		vcvt.f64.f32	d9, s0
 1003 0074 B0EE490B 		vmov.f64	d0, d9
 1004              	.LVL102:
 1005 0078 FFF7FEFF 		bl	sin
 1006              	.LVL103:
 1007 007c 28EE000B 		vmul.f64	d0, d8, d0
 1008 0080 FDEEC07B 		vcvt.s32.f64	s15, d0
 1009 0084 17EE906A 		vmov	r6, s15	@ int
 1010 0088 5AFA86F6 		uxtab	r6, r10, r6
 1011 008c F6B2     		uxtb	r6, r6
 1012              	.LVL104:
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 27


 400:../SSD1306/ssd1306/ssd1306.c ****         yp2 = y + (int8_t)(cos(rad)*radius);    
 1013              		.loc 1 400 0
 1014 008e B0EE490B 		vmov.f64	d0, d9
 1015 0092 FFF7FEFF 		bl	cos
 1016              	.LVL105:
 1017 0096 28EE000B 		vmul.f64	d0, d8, d0
 1018 009a FDEEC07B 		vcvt.s32.f64	s15, d0
 1019 009e 17EE903A 		vmov	r3, s15	@ int
 1020 00a2 59FA83F3 		uxtab	r3, r9, r3
 1021              	.LVL106:
 401:../SSD1306/ssd1306/ssd1306.c ****         ssd1306_Line(xp1,yp1,xp2,yp2,color);
 1022              		.loc 1 401 0
 1023 00a6 CDF800B0 		str	fp, [sp]
 1024 00aa DBB2     		uxtb	r3, r3
 1025 00ac 3246     		mov	r2, r6
 1026 00ae 2946     		mov	r1, r5
 1027 00b0 2046     		mov	r0, r4
 1028 00b2 FFF7FEFF 		bl	ssd1306_Line
 1029              	.LVL107:
 1030              	.L93:
 385:../SSD1306/ssd1306/ssd1306.c ****     {
 1031              		.loc 1 385 0
 1032 00b6 4745     		cmp	r7, r8
 1033 00b8 31D2     		bcs	.L98
 387:../SSD1306/ssd1306/ssd1306.c ****         xp1 = x + (int8_t)(sin(rad)*radius);
 1034              		.loc 1 387 0
 1035 00ba 07EE907A 		vmov	s15, r7	@ int
 1036 00be B8EE670A 		vcvt.f32.u32	s0, s15
 1037 00c2 20EE0A0A 		vmul.f32	s0, s0, s20
 1038 00c6 FFF7FEFF 		bl	ssd1306_DegToRad
 1039              	.LVL108:
 388:../SSD1306/ssd1306/ssd1306.c ****         yp1 = y + (int8_t)(cos(rad)*radius);    
 1040              		.loc 1 388 0
 1041 00ca B7EEC09A 		vcvt.f64.f32	d9, s0
 1042 00ce B0EE490B 		vmov.f64	d0, d9
 1043              	.LVL109:
 1044 00d2 FFF7FEFF 		bl	sin
 1045              	.LVL110:
 1046 00d6 B8EEEA8B 		vcvt.f64.s32	d8, s21
 1047 00da 20EE080B 		vmul.f64	d0, d0, d8
 1048 00de FDEEC07B 		vcvt.s32.f64	s15, d0
 1049 00e2 17EE904A 		vmov	r4, s15	@ int
 1050 00e6 5AFA84F4 		uxtab	r4, r10, r4
 1051 00ea E4B2     		uxtb	r4, r4
 1052              	.LVL111:
 389:../SSD1306/ssd1306/ssd1306.c ****         count++;
 1053              		.loc 1 389 0
 1054 00ec B0EE490B 		vmov.f64	d0, d9
 1055 00f0 FFF7FEFF 		bl	cos
 1056              	.LVL112:
 1057 00f4 28EE000B 		vmul.f64	d0, d8, d0
 1058 00f8 FDEEC07B 		vcvt.s32.f64	s15, d0
 1059 00fc 17EE905A 		vmov	r5, s15	@ int
 1060 0100 59FA85F5 		uxtab	r5, r9, r5
 1061 0104 EDB2     		uxtb	r5, r5
 1062              	.LVL113:
 390:../SSD1306/ssd1306/ssd1306.c ****         if(count != approx_segments)
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 28


 1063              		.loc 1 390 0
 1064 0106 0137     		adds	r7, r7, #1
 1065              	.LVL114:
 391:../SSD1306/ssd1306/ssd1306.c ****         {
 1066              		.loc 1 391 0
 1067 0108 B845     		cmp	r8, r7
 1068 010a ADD0     		beq	.L94
 393:../SSD1306/ssd1306/ssd1306.c ****         }
 1069              		.loc 1 393 0
 1070 010c 07EE907A 		vmov	s15, r7	@ int
 1071 0110 B8EE670A 		vcvt.f32.u32	s0, s15
 1072 0114 20EE0A0A 		vmul.f32	s0, s0, s20
 1073 0118 FFF7FEFF 		bl	ssd1306_DegToRad
 1074              	.LVL115:
 1075 011c A8E7     		b	.L95
 1076              	.LVL116:
 1077              	.L98:
 402:../SSD1306/ssd1306/ssd1306.c ****     }
 403:../SSD1306/ssd1306/ssd1306.c ****     
 404:../SSD1306/ssd1306/ssd1306.c ****     return;
 405:../SSD1306/ssd1306/ssd1306.c **** }
 1078              		.loc 1 405 0
 1079 011e 03B0     		add	sp, sp, #12
 1080              	.LCFI26:
 1081              		.cfi_def_cfa_offset 68
 1082              		@ sp needed
 1083 0120 BDEC088B 		vldm	sp!, {d8-d11}
 1084              	.LCFI27:
 1085              		.cfi_restore 86
 1086              		.cfi_restore 87
 1087              		.cfi_restore 84
 1088              		.cfi_restore 85
 1089              		.cfi_restore 82
 1090              		.cfi_restore 83
 1091              		.cfi_restore 80
 1092              		.cfi_restore 81
 1093              		.cfi_def_cfa_offset 36
 1094              	.LVL117:
 1095 0124 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1096              	.LVL118:
 1097              	.L100:
 1098              		.align	2
 1099              	.L99:
 1100 0128 B7600BB6 		.word	-1240768329
 1101 012c 176CC116 		.word	381774871
 1102              		.cfi_endproc
 1103              	.LFE18:
 1105              		.section	.text.ssd1306_DrawCircle,"ax",%progbits
 1106              		.align	1
 1107              		.global	ssd1306_DrawCircle
 1108              		.syntax unified
 1109              		.thumb
 1110              		.thumb_func
 1111              		.fpu fpv5-d16
 1113              	ssd1306_DrawCircle:
 1114              	.LFB19:
 406:../SSD1306/ssd1306/ssd1306.c **** //Draw circle by Bresenhem's algorithm
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 29


 407:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_DrawCircle(uint8_t par_x,uint8_t par_y,uint8_t par_r,SSD1306_COLOR par_color) {
 1115              		.loc 1 407 0
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 8
 1118              		@ frame_needed = 0, uses_anonymous_args = 0
 1119              	.LVL119:
 1120 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1121              	.LCFI28:
 1122              		.cfi_def_cfa_offset 36
 1123              		.cfi_offset 4, -36
 1124              		.cfi_offset 5, -32
 1125              		.cfi_offset 6, -28
 1126              		.cfi_offset 7, -24
 1127              		.cfi_offset 8, -20
 1128              		.cfi_offset 9, -16
 1129              		.cfi_offset 10, -12
 1130              		.cfi_offset 11, -8
 1131              		.cfi_offset 14, -4
 1132 0004 83B0     		sub	sp, sp, #12
 1133              	.LCFI29:
 1134              		.cfi_def_cfa_offset 48
 408:../SSD1306/ssd1306/ssd1306.c ****   int32_t x = -par_r;
 1135              		.loc 1 408 0
 1136 0006 5742     		negs	r7, r2
 1137              	.LVL120:
 409:../SSD1306/ssd1306/ssd1306.c ****   int32_t y = 0;
 410:../SSD1306/ssd1306/ssd1306.c ****   int32_t err = 2 - 2 * par_r;
 1138              		.loc 1 410 0
 1139 0008 C2F10102 		rsb	r2, r2, #1
 1140              	.LVL121:
 1141 000c 5600     		lsls	r6, r2, #1
 1142              	.LVL122:
 411:../SSD1306/ssd1306/ssd1306.c ****   int32_t e2;
 412:../SSD1306/ssd1306/ssd1306.c **** 
 413:../SSD1306/ssd1306/ssd1306.c ****   if (par_x >= SSD1306_WIDTH || par_y >= SSD1306_HEIGHT) {
 1143              		.loc 1 413 0
 1144 000e 1F29     		cmp	r1, #31
 1145 0010 94BF     		ite	ls
 1146 0012 0022     		movls	r2, #0
 1147 0014 0122     		movhi	r2, #1
 1148 0016 52EAD012 		orrs	r2, r2, r0, lsr #7
 1149 001a 47D1     		bne	.L101
 1150 001c 0093     		str	r3, [sp]
 1151 001e 8B46     		mov	fp, r1
 1152 0020 0190     		str	r0, [sp, #4]
 409:../SSD1306/ssd1306/ssd1306.c ****   int32_t y = 0;
 1153              		.loc 1 409 0
 1154 0022 4FF0000A 		mov	r10, #0
 1155 0026 08E0     		b	.L105
 1156              	.LVL123:
 1157              	.L106:
 1158 0028 3346     		mov	r3, r6
 1159              	.LVL124:
 1160              	.L103:
 414:../SSD1306/ssd1306/ssd1306.c ****     return;
 415:../SSD1306/ssd1306/ssd1306.c ****   }
 416:../SSD1306/ssd1306/ssd1306.c **** 
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 30


 417:../SSD1306/ssd1306/ssd1306.c ****     do {
 418:../SSD1306/ssd1306/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y + y, par_color);
 419:../SSD1306/ssd1306/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y + y, par_color);
 420:../SSD1306/ssd1306/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y - y, par_color);
 421:../SSD1306/ssd1306/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y - y, par_color);
 422:../SSD1306/ssd1306/ssd1306.c ****         e2 = err;
 423:../SSD1306/ssd1306/ssd1306.c ****         if (e2 <= y) {
 424:../SSD1306/ssd1306/ssd1306.c ****             y++;
 425:../SSD1306/ssd1306/ssd1306.c ****             err = err + (y * 2 + 1);
 426:../SSD1306/ssd1306/ssd1306.c ****             if(-x == y && e2 <= x) {
 427:../SSD1306/ssd1306/ssd1306.c ****               e2 = 0;
 428:../SSD1306/ssd1306/ssd1306.c ****             }
 429:../SSD1306/ssd1306/ssd1306.c ****             else
 430:../SSD1306/ssd1306/ssd1306.c ****             {
 431:../SSD1306/ssd1306/ssd1306.c ****               /*nothing to do*/
 432:../SSD1306/ssd1306/ssd1306.c ****             }
 433:../SSD1306/ssd1306/ssd1306.c ****         }
 434:../SSD1306/ssd1306/ssd1306.c ****         else
 435:../SSD1306/ssd1306/ssd1306.c ****         {
 436:../SSD1306/ssd1306/ssd1306.c ****           /*nothing to do*/
 437:../SSD1306/ssd1306/ssd1306.c ****         }
 438:../SSD1306/ssd1306/ssd1306.c ****         if(e2 > x) {
 1161              		.loc 1 438 0
 1162 002a B742     		cmp	r7, r6
 1163 002c 3CDA     		bge	.L108
 439:../SSD1306/ssd1306/ssd1306.c ****           x++;
 1164              		.loc 1 439 0
 1165 002e 0137     		adds	r7, r7, #1
 1166              	.LVL125:
 440:../SSD1306/ssd1306/ssd1306.c ****           err = err + (x * 2 + 1);
 1167              		.loc 1 440 0
 1168 0030 7E00     		lsls	r6, r7, #1
 1169              	.LVL126:
 1170 0032 0136     		adds	r6, r6, #1
 1171 0034 1E44     		add	r6, r6, r3
 1172              	.LVL127:
 1173              	.L104:
 441:../SSD1306/ssd1306/ssd1306.c ****         }
 442:../SSD1306/ssd1306/ssd1306.c ****         else
 443:../SSD1306/ssd1306/ssd1306.c ****         {
 444:../SSD1306/ssd1306/ssd1306.c ****           /*nothing to do*/
 445:../SSD1306/ssd1306/ssd1306.c ****         }
 446:../SSD1306/ssd1306/ssd1306.c ****     } while(x <= 0);
 1174              		.loc 1 446 0
 1175 0036 002F     		cmp	r7, #0
 1176 0038 38DC     		bgt	.L101
 1177              	.LVL128:
 1178              	.L105:
 418:../SSD1306/ssd1306/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y + y, par_color);
 1179              		.loc 1 418 0
 1180 003a FDB2     		uxtb	r5, r7
 1181 003c 019B     		ldr	r3, [sp, #4]
 1182 003e A3EB0508 		sub	r8, r3, r5
 1183 0042 5FFA88F8 		uxtb	r8, r8
 1184 0046 5FFA8AF4 		uxtb	r4, r10
 1185 004a 04EB0B09 		add	r9, r4, fp
 1186 004e 5FFA89F9 		uxtb	r9, r9
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 31


 1187 0052 009A     		ldr	r2, [sp]
 1188 0054 4946     		mov	r1, r9
 1189 0056 4046     		mov	r0, r8
 1190 0058 FFF7FEFF 		bl	ssd1306_DrawPixel
 1191              	.LVL129:
 419:../SSD1306/ssd1306/ssd1306.c ****       ssd1306_DrawPixel(par_x + x, par_y - y, par_color);
 1192              		.loc 1 419 0
 1193 005c 019B     		ldr	r3, [sp, #4]
 1194 005e 1D44     		add	r5, r5, r3
 1195 0060 EDB2     		uxtb	r5, r5
 1196 0062 009A     		ldr	r2, [sp]
 1197 0064 4946     		mov	r1, r9
 1198 0066 2846     		mov	r0, r5
 1199 0068 FFF7FEFF 		bl	ssd1306_DrawPixel
 1200              	.LVL130:
 420:../SSD1306/ssd1306/ssd1306.c ****       ssd1306_DrawPixel(par_x - x, par_y - y, par_color);
 1201              		.loc 1 420 0
 1202 006c ABEB0404 		sub	r4, fp, r4
 1203 0070 E4B2     		uxtb	r4, r4
 1204 0072 DDF80090 		ldr	r9, [sp]
 1205 0076 4A46     		mov	r2, r9
 1206 0078 2146     		mov	r1, r4
 1207 007a 2846     		mov	r0, r5
 1208 007c FFF7FEFF 		bl	ssd1306_DrawPixel
 1209              	.LVL131:
 421:../SSD1306/ssd1306/ssd1306.c ****         e2 = err;
 1210              		.loc 1 421 0
 1211 0080 4A46     		mov	r2, r9
 1212 0082 2146     		mov	r1, r4
 1213 0084 4046     		mov	r0, r8
 1214 0086 FFF7FEFF 		bl	ssd1306_DrawPixel
 1215              	.LVL132:
 423:../SSD1306/ssd1306/ssd1306.c ****             y++;
 1216              		.loc 1 423 0
 1217 008a B245     		cmp	r10, r6
 1218 008c CCDB     		blt	.L106
 424:../SSD1306/ssd1306/ssd1306.c ****             err = err + (y * 2 + 1);
 1219              		.loc 1 424 0
 1220 008e 0AF1010A 		add	r10, r10, #1
 1221              	.LVL133:
 425:../SSD1306/ssd1306/ssd1306.c ****             if(-x == y && e2 <= x) {
 1222              		.loc 1 425 0
 1223 0092 4FEA4A03 		lsl	r3, r10, #1
 1224 0096 0133     		adds	r3, r3, #1
 1225 0098 3344     		add	r3, r3, r6
 1226              	.LVL134:
 426:../SSD1306/ssd1306/ssd1306.c ****               e2 = 0;
 1227              		.loc 1 426 0
 1228 009a 1AEB070F 		cmn	r10, r7
 1229 009e C4D1     		bne	.L103
 426:../SSD1306/ssd1306/ssd1306.c ****               e2 = 0;
 1230              		.loc 1 426 0 is_stmt 0 discriminator 1
 1231 00a0 B742     		cmp	r7, r6
 1232 00a2 C2DB     		blt	.L103
 427:../SSD1306/ssd1306/ssd1306.c ****             }
 1233              		.loc 1 427 0 is_stmt 1
 1234 00a4 0026     		movs	r6, #0
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 32


 1235              	.LVL135:
 1236 00a6 C0E7     		b	.L103
 1237              	.LVL136:
 1238              	.L108:
 1239 00a8 1E46     		mov	r6, r3
 1240              	.LVL137:
 1241 00aa C4E7     		b	.L104
 1242              	.LVL138:
 1243              	.L101:
 447:../SSD1306/ssd1306/ssd1306.c **** 
 448:../SSD1306/ssd1306/ssd1306.c ****     return;
 449:../SSD1306/ssd1306/ssd1306.c **** }
 1244              		.loc 1 449 0
 1245 00ac 03B0     		add	sp, sp, #12
 1246              	.LCFI30:
 1247              		.cfi_def_cfa_offset 36
 1248              		@ sp needed
 1249 00ae BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1250              		.cfi_endproc
 1251              	.LFE19:
 1253              		.section	.text.ssd1306_DrawRectangle,"ax",%progbits
 1254              		.align	1
 1255              		.global	ssd1306_DrawRectangle
 1256              		.syntax unified
 1257              		.thumb
 1258              		.thumb_func
 1259              		.fpu fpv5-d16
 1261              	ssd1306_DrawRectangle:
 1262              	.LFB20:
 450:../SSD1306/ssd1306/ssd1306.c **** 
 451:../SSD1306/ssd1306/ssd1306.c **** //Draw rectangle
 452:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_DrawRectangle(uint8_t x1, uint8_t y1, uint8_t x2, uint8_t y2, SSD1306_COLOR color) {
 1263              		.loc 1 452 0
 1264              		.cfi_startproc
 1265              		@ args = 4, pretend = 0, frame = 0
 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 1267              	.LVL139:
 1268 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1269              	.LCFI31:
 1270              		.cfi_def_cfa_offset 24
 1271              		.cfi_offset 4, -24
 1272              		.cfi_offset 5, -20
 1273              		.cfi_offset 6, -16
 1274              		.cfi_offset 7, -12
 1275              		.cfi_offset 8, -8
 1276              		.cfi_offset 14, -4
 1277 0004 82B0     		sub	sp, sp, #8
 1278              	.LCFI32:
 1279              		.cfi_def_cfa_offset 32
 1280 0006 0646     		mov	r6, r0
 1281 0008 0F46     		mov	r7, r1
 1282 000a 9046     		mov	r8, r2
 1283 000c 1C46     		mov	r4, r3
 1284 000e 9DF82050 		ldrb	r5, [sp, #32]	@ zero_extendqisi2
 453:../SSD1306/ssd1306/ssd1306.c ****   ssd1306_Line(x1,y1,x2,y1,color);
 1285              		.loc 1 453 0
 1286 0012 0095     		str	r5, [sp]
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 33


 1287 0014 0B46     		mov	r3, r1
 1288              	.LVL140:
 1289 0016 FFF7FEFF 		bl	ssd1306_Line
 1290              	.LVL141:
 454:../SSD1306/ssd1306/ssd1306.c ****   ssd1306_Line(x2,y1,x2,y2,color);
 1291              		.loc 1 454 0
 1292 001a 0095     		str	r5, [sp]
 1293 001c 2346     		mov	r3, r4
 1294 001e 4246     		mov	r2, r8
 1295 0020 3946     		mov	r1, r7
 1296 0022 4046     		mov	r0, r8
 1297 0024 FFF7FEFF 		bl	ssd1306_Line
 1298              	.LVL142:
 455:../SSD1306/ssd1306/ssd1306.c ****   ssd1306_Line(x2,y2,x1,y2,color);
 1299              		.loc 1 455 0
 1300 0028 0095     		str	r5, [sp]
 1301 002a 2346     		mov	r3, r4
 1302 002c 3246     		mov	r2, r6
 1303 002e 2146     		mov	r1, r4
 1304 0030 4046     		mov	r0, r8
 1305 0032 FFF7FEFF 		bl	ssd1306_Line
 1306              	.LVL143:
 456:../SSD1306/ssd1306/ssd1306.c ****   ssd1306_Line(x1,y2,x1,y1,color);
 1307              		.loc 1 456 0
 1308 0036 0095     		str	r5, [sp]
 1309 0038 3B46     		mov	r3, r7
 1310 003a 3246     		mov	r2, r6
 1311 003c 2146     		mov	r1, r4
 1312 003e 3046     		mov	r0, r6
 1313 0040 FFF7FEFF 		bl	ssd1306_Line
 1314              	.LVL144:
 457:../SSD1306/ssd1306/ssd1306.c **** 
 458:../SSD1306/ssd1306/ssd1306.c ****   return;
 459:../SSD1306/ssd1306/ssd1306.c **** }
 1315              		.loc 1 459 0
 1316 0044 02B0     		add	sp, sp, #8
 1317              	.LCFI33:
 1318              		.cfi_def_cfa_offset 24
 1319              		@ sp needed
 1320 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1321              		.cfi_endproc
 1322              	.LFE20:
 1324              		.section	.text.ssd1306_SetContrast,"ax",%progbits
 1325              		.align	1
 1326              		.global	ssd1306_SetContrast
 1327              		.syntax unified
 1328              		.thumb
 1329              		.thumb_func
 1330              		.fpu fpv5-d16
 1332              	ssd1306_SetContrast:
 1333              	.LFB21:
 460:../SSD1306/ssd1306/ssd1306.c **** 
 461:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_SetContrast(const uint8_t value) {
 1334              		.loc 1 461 0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 0
 1337              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 34


 1338              	.LVL145:
 1339 0000 10B5     		push	{r4, lr}
 1340              	.LCFI34:
 1341              		.cfi_def_cfa_offset 8
 1342              		.cfi_offset 4, -8
 1343              		.cfi_offset 14, -4
 1344 0002 0446     		mov	r4, r0
 1345              	.LVL146:
 462:../SSD1306/ssd1306/ssd1306.c ****     const uint8_t kSetContrastControlRegister = 0x81;
 463:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(kSetContrastControlRegister);
 1346              		.loc 1 463 0
 1347 0004 8120     		movs	r0, #129
 1348              	.LVL147:
 1349 0006 FFF7FEFF 		bl	ssd1306_WriteCommand
 1350              	.LVL148:
 464:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(value);
 1351              		.loc 1 464 0
 1352 000a 2046     		mov	r0, r4
 1353 000c FFF7FEFF 		bl	ssd1306_WriteCommand
 1354              	.LVL149:
 465:../SSD1306/ssd1306/ssd1306.c **** }
 1355              		.loc 1 465 0
 1356 0010 10BD     		pop	{r4, pc}
 1357              		.cfi_endproc
 1358              	.LFE21:
 1360              		.section	.text.ssd1306_SetDisplayOn,"ax",%progbits
 1361              		.align	1
 1362              		.global	ssd1306_SetDisplayOn
 1363              		.syntax unified
 1364              		.thumb
 1365              		.thumb_func
 1366              		.fpu fpv5-d16
 1368              	ssd1306_SetDisplayOn:
 1369              	.LFB22:
 466:../SSD1306/ssd1306/ssd1306.c **** 
 467:../SSD1306/ssd1306/ssd1306.c **** void ssd1306_SetDisplayOn(const uint8_t on) {
 1370              		.loc 1 467 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374              	.LVL150:
 1375 0000 08B5     		push	{r3, lr}
 1376              	.LCFI35:
 1377              		.cfi_def_cfa_offset 8
 1378              		.cfi_offset 3, -8
 1379              		.cfi_offset 14, -4
 468:../SSD1306/ssd1306/ssd1306.c ****     uint8_t value;
 469:../SSD1306/ssd1306/ssd1306.c ****     if (on) {
 1380              		.loc 1 469 0
 1381 0002 30B9     		cbnz	r0, .L118
 1382              	.LVL151:
 470:../SSD1306/ssd1306/ssd1306.c ****         value = 0xAF;   // Display on
 471:../SSD1306/ssd1306/ssd1306.c ****         SSD1306.DisplayOn = 1;
 472:../SSD1306/ssd1306/ssd1306.c ****     } else {
 473:../SSD1306/ssd1306/ssd1306.c ****         value = 0xAE;   // Display off
 474:../SSD1306/ssd1306/ssd1306.c ****         SSD1306.DisplayOn = 0;
 1383              		.loc 1 474 0
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 35


 1384 0004 054B     		ldr	r3, .L119
 1385 0006 0022     		movs	r2, #0
 1386 0008 9A71     		strb	r2, [r3, #6]
 473:../SSD1306/ssd1306/ssd1306.c ****         SSD1306.DisplayOn = 0;
 1387              		.loc 1 473 0
 1388 000a AE20     		movs	r0, #174
 1389              	.LVL152:
 1390              	.L116:
 475:../SSD1306/ssd1306/ssd1306.c ****     }
 476:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(value);
 1391              		.loc 1 476 0
 1392 000c FFF7FEFF 		bl	ssd1306_WriteCommand
 1393              	.LVL153:
 477:../SSD1306/ssd1306/ssd1306.c **** }
 1394              		.loc 1 477 0
 1395 0010 08BD     		pop	{r3, pc}
 1396              	.LVL154:
 1397              	.L118:
 471:../SSD1306/ssd1306/ssd1306.c ****     } else {
 1398              		.loc 1 471 0
 1399 0012 024B     		ldr	r3, .L119
 1400 0014 0122     		movs	r2, #1
 1401 0016 9A71     		strb	r2, [r3, #6]
 470:../SSD1306/ssd1306/ssd1306.c ****         SSD1306.DisplayOn = 1;
 1402              		.loc 1 470 0
 1403 0018 AF20     		movs	r0, #175
 1404              	.LVL155:
 1405 001a F7E7     		b	.L116
 1406              	.L120:
 1407              		.align	2
 1408              	.L119:
 1409 001c 00000000 		.word	.LANCHOR1
 1410              		.cfi_endproc
 1411              	.LFE22:
 1413              		.section	.text.ssd1306_Init,"ax",%progbits
 1414              		.align	1
 1415              		.global	ssd1306_Init
 1416              		.syntax unified
 1417              		.thumb
 1418              		.thumb_func
 1419              		.fpu fpv5-d16
 1421              	ssd1306_Init:
 1422              	.LFB7:
  87:../SSD1306/ssd1306/ssd1306.c ****     // Reset OLED
 1423              		.loc 1 87 0
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 0
 1426              		@ frame_needed = 0, uses_anonymous_args = 0
 1427 0000 08B5     		push	{r3, lr}
 1428              	.LCFI36:
 1429              		.cfi_def_cfa_offset 8
 1430              		.cfi_offset 3, -8
 1431              		.cfi_offset 14, -4
  92:../SSD1306/ssd1306/ssd1306.c **** 
 1432              		.loc 1 92 0
 1433 0002 6420     		movs	r0, #100
 1434 0004 FFF7FEFF 		bl	delay_ms
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 36


 1435              	.LVL156:
  95:../SSD1306/ssd1306/ssd1306.c **** 
 1436              		.loc 1 95 0
 1437 0008 0020     		movs	r0, #0
 1438 000a FFF7FEFF 		bl	ssd1306_SetDisplayOn
 1439              	.LVL157:
  97:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
 1440              		.loc 1 97 0
 1441 000e 2020     		movs	r0, #32
 1442 0010 FFF7FEFF 		bl	ssd1306_WriteCommand
 1443              	.LVL158:
  98:../SSD1306/ssd1306/ssd1306.c ****                                 // 10b,Page Addressing Mode (RESET); 11b,Invalid
 1444              		.loc 1 98 0
 1445 0014 0020     		movs	r0, #0
 1446 0016 FFF7FEFF 		bl	ssd1306_WriteCommand
 1447              	.LVL159:
 101:../SSD1306/ssd1306/ssd1306.c **** 
 1448              		.loc 1 101 0
 1449 001a B020     		movs	r0, #176
 1450 001c FFF7FEFF 		bl	ssd1306_WriteCommand
 1451              	.LVL160:
 106:../SSD1306/ssd1306/ssd1306.c **** #endif
 1452              		.loc 1 106 0
 1453 0020 C820     		movs	r0, #200
 1454 0022 FFF7FEFF 		bl	ssd1306_WriteCommand
 1455              	.LVL161:
 109:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x10); //---set high column address
 1456              		.loc 1 109 0
 1457 0026 0020     		movs	r0, #0
 1458 0028 FFF7FEFF 		bl	ssd1306_WriteCommand
 1459              	.LVL162:
 110:../SSD1306/ssd1306/ssd1306.c **** 
 1460              		.loc 1 110 0
 1461 002c 1020     		movs	r0, #16
 1462 002e FFF7FEFF 		bl	ssd1306_WriteCommand
 1463              	.LVL163:
 112:../SSD1306/ssd1306/ssd1306.c **** 
 1464              		.loc 1 112 0
 1465 0032 4020     		movs	r0, #64
 1466 0034 FFF7FEFF 		bl	ssd1306_WriteCommand
 1467              	.LVL164:
 114:../SSD1306/ssd1306/ssd1306.c **** 
 1468              		.loc 1 114 0
 1469 0038 FF20     		movs	r0, #255
 1470 003a FFF7FEFF 		bl	ssd1306_SetContrast
 1471              	.LVL165:
 119:../SSD1306/ssd1306/ssd1306.c **** #endif
 1472              		.loc 1 119 0
 1473 003e A120     		movs	r0, #161
 1474 0040 FFF7FEFF 		bl	ssd1306_WriteCommand
 1475              	.LVL166:
 125:../SSD1306/ssd1306/ssd1306.c **** #endif
 1476              		.loc 1 125 0
 1477 0044 A620     		movs	r0, #166
 1478 0046 FFF7FEFF 		bl	ssd1306_WriteCommand
 1479              	.LVL167:
 133:../SSD1306/ssd1306/ssd1306.c **** #endif
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 37


 1480              		.loc 1 133 0
 1481 004a A820     		movs	r0, #168
 1482 004c FFF7FEFF 		bl	ssd1306_WriteCommand
 1483              	.LVL168:
 137:../SSD1306/ssd1306/ssd1306.c **** #elif (SSD1306_HEIGHT == 64)
 1484              		.loc 1 137 0
 1485 0050 1F20     		movs	r0, #31
 1486 0052 FFF7FEFF 		bl	ssd1306_WriteCommand
 1487              	.LVL169:
 146:../SSD1306/ssd1306/ssd1306.c **** 
 1488              		.loc 1 146 0
 1489 0056 A420     		movs	r0, #164
 1490 0058 FFF7FEFF 		bl	ssd1306_WriteCommand
 1491              	.LVL170:
 148:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x00); //-not offset
 1492              		.loc 1 148 0
 1493 005c D320     		movs	r0, #211
 1494 005e FFF7FEFF 		bl	ssd1306_WriteCommand
 1495              	.LVL171:
 149:../SSD1306/ssd1306/ssd1306.c **** 
 1496              		.loc 1 149 0
 1497 0062 0020     		movs	r0, #0
 1498 0064 FFF7FEFF 		bl	ssd1306_WriteCommand
 1499              	.LVL172:
 151:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0xF0); //--set divide ratio
 1500              		.loc 1 151 0
 1501 0068 D520     		movs	r0, #213
 1502 006a FFF7FEFF 		bl	ssd1306_WriteCommand
 1503              	.LVL173:
 152:../SSD1306/ssd1306/ssd1306.c **** 
 1504              		.loc 1 152 0
 1505 006e F020     		movs	r0, #240
 1506 0070 FFF7FEFF 		bl	ssd1306_WriteCommand
 1507              	.LVL174:
 154:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x22); //
 1508              		.loc 1 154 0
 1509 0074 D920     		movs	r0, #217
 1510 0076 FFF7FEFF 		bl	ssd1306_WriteCommand
 1511              	.LVL175:
 155:../SSD1306/ssd1306/ssd1306.c **** 
 1512              		.loc 1 155 0
 1513 007a 2220     		movs	r0, #34
 1514 007c FFF7FEFF 		bl	ssd1306_WriteCommand
 1515              	.LVL176:
 157:../SSD1306/ssd1306/ssd1306.c **** #if (SSD1306_HEIGHT == 32)
 1516              		.loc 1 157 0
 1517 0080 DA20     		movs	r0, #218
 1518 0082 FFF7FEFF 		bl	ssd1306_WriteCommand
 1519              	.LVL177:
 159:../SSD1306/ssd1306/ssd1306.c **** #elif (SSD1306_HEIGHT == 64)
 1520              		.loc 1 159 0
 1521 0086 0220     		movs	r0, #2
 1522 0088 FFF7FEFF 		bl	ssd1306_WriteCommand
 1523              	.LVL178:
 168:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x20); //0x20,0.77xVcc
 1524              		.loc 1 168 0
 1525 008c DB20     		movs	r0, #219
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 38


 1526 008e FFF7FEFF 		bl	ssd1306_WriteCommand
 1527              	.LVL179:
 169:../SSD1306/ssd1306/ssd1306.c **** 
 1528              		.loc 1 169 0
 1529 0092 2020     		movs	r0, #32
 1530 0094 FFF7FEFF 		bl	ssd1306_WriteCommand
 1531              	.LVL180:
 171:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_WriteCommand(0x14); //
 1532              		.loc 1 171 0
 1533 0098 8D20     		movs	r0, #141
 1534 009a FFF7FEFF 		bl	ssd1306_WriteCommand
 1535              	.LVL181:
 172:../SSD1306/ssd1306/ssd1306.c ****     ssd1306_SetDisplayOn(1); //--turn on SSD1306 panel
 1536              		.loc 1 172 0
 1537 009e 1420     		movs	r0, #20
 1538 00a0 FFF7FEFF 		bl	ssd1306_WriteCommand
 1539              	.LVL182:
 173:../SSD1306/ssd1306/ssd1306.c **** 
 1540              		.loc 1 173 0
 1541 00a4 0120     		movs	r0, #1
 1542 00a6 FFF7FEFF 		bl	ssd1306_SetDisplayOn
 1543              	.LVL183:
 176:../SSD1306/ssd1306/ssd1306.c ****     
 1544              		.loc 1 176 0
 1545 00aa 0020     		movs	r0, #0
 1546 00ac FFF7FEFF 		bl	ssd1306_Fill
 1547              	.LVL184:
 179:../SSD1306/ssd1306/ssd1306.c ****     
 1548              		.loc 1 179 0
 1549 00b0 FFF7FEFF 		bl	ssd1306_UpdateScreen
 1550              	.LVL185:
 182:../SSD1306/ssd1306/ssd1306.c ****     SSD1306.CurrentY = 0;
 1551              		.loc 1 182 0
 1552 00b4 034B     		ldr	r3, .L123
 1553 00b6 0022     		movs	r2, #0
 1554 00b8 1A80     		strh	r2, [r3]	@ movhi
 183:../SSD1306/ssd1306/ssd1306.c ****     
 1555              		.loc 1 183 0
 1556 00ba 5A80     		strh	r2, [r3, #2]	@ movhi
 185:../SSD1306/ssd1306/ssd1306.c **** }
 1557              		.loc 1 185 0
 1558 00bc 0122     		movs	r2, #1
 1559 00be 5A71     		strb	r2, [r3, #5]
 186:../SSD1306/ssd1306/ssd1306.c **** 
 1560              		.loc 1 186 0
 1561 00c0 08BD     		pop	{r3, pc}
 1562              	.L124:
 1563 00c2 00BF     		.align	2
 1564              	.L123:
 1565 00c4 00000000 		.word	.LANCHOR1
 1566              		.cfi_endproc
 1567              	.LFE7:
 1569              		.section	.text.ssd1306_GetDisplayOn,"ax",%progbits
 1570              		.align	1
 1571              		.global	ssd1306_GetDisplayOn
 1572              		.syntax unified
 1573              		.thumb
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 39


 1574              		.thumb_func
 1575              		.fpu fpv5-d16
 1577              	ssd1306_GetDisplayOn:
 1578              	.LFB23:
 478:../SSD1306/ssd1306/ssd1306.c **** 
 479:../SSD1306/ssd1306/ssd1306.c **** uint8_t ssd1306_GetDisplayOn() {
 1579              		.loc 1 479 0
 1580              		.cfi_startproc
 1581              		@ args = 0, pretend = 0, frame = 0
 1582              		@ frame_needed = 0, uses_anonymous_args = 0
 1583              		@ link register save eliminated.
 480:../SSD1306/ssd1306/ssd1306.c ****     return SSD1306.DisplayOn;
 481:../SSD1306/ssd1306/ssd1306.c **** }
 1584              		.loc 1 481 0
 1585 0000 014B     		ldr	r3, .L126
 1586 0002 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 1587 0004 7047     		bx	lr
 1588              	.L127:
 1589 0006 00BF     		.align	2
 1590              	.L126:
 1591 0008 00000000 		.word	.LANCHOR1
 1592              		.cfi_endproc
 1593              	.LFE23:
 1595              		.section	.bss.SSD1306,"aw",%nobits
 1596              		.align	2
 1597              		.set	.LANCHOR1,. + 0
 1600              	SSD1306:
 1601 0000 00000000 		.space	8
 1601      00000000 
 1602              		.section	.bss.SSD1306_Buffer,"aw",%nobits
 1603              		.align	2
 1604              		.set	.LANCHOR0,. + 0
 1607              	SSD1306_Buffer:
 1608 0000 00000000 		.space	512
 1608      00000000 
 1608      00000000 
 1608      00000000 
 1608      00000000 
 1609              		.text
 1610              	.Letext0:
 1611              		.file 2 "d:\\programs\\stm32cubeide_1.4.0\\stm32cubeide\\plugins\\com.st.stm32cube.ide.mcu.externa
 1612              		.file 3 "d:\\programs\\stm32cubeide_1.4.0\\stm32cubeide\\plugins\\com.st.stm32cube.ide.mcu.externa
 1613              		.file 4 "d:\\programs\\stm32cubeide_1.4.0\\stm32cubeide\\plugins\\com.st.stm32cube.ide.mcu.externa
 1614              		.file 5 "../SSD1306/ssd1306/ssd1306_fonts.h"
 1615              		.file 6 "../SSD1306/ssd1306/ssd1306.h"
 1616              		.file 7 "d:\\programs\\stm32cubeide_1.4.0\\stm32cubeide\\plugins\\com.st.stm32cube.ide.mcu.externa
 1617              		.file 8 "d:\\programs\\stm32cubeide_1.4.0\\stm32cubeide\\plugins\\com.st.stm32cube.ide.mcu.externa
 1618              		.file 9 "d:\\programs\\stm32cubeide_1.4.0\\stm32cubeide\\plugins\\com.st.stm32cube.ide.mcu.externa
 1619              		.file 10 "d:\\programs\\stm32cubeide_1.4.0\\stm32cubeide\\plugins\\com.st.stm32cube.ide.mcu.extern
 1620              		.file 11 "d:\\programs\\stm32cubeide_1.4.0\\stm32cubeide\\plugins\\com.st.stm32cube.ide.mcu.extern
 1621              		.file 12 "../libopencm3-master/include/libopencm3/stm32/f7/pwr.h"
 1622              		.file 13 "../libopencm3-master/include/libopencm3/stm32/f7/rcc.h"
 1623              		.file 14 "Core/Inc/i2c_oled.h"
 1624              		.file 15 "<built-in>"
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ssd1306.c
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:17     .text.ssd1306_DegToRad:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:23     .text.ssd1306_DegToRad:0000000000000000 ssd1306_DegToRad
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:45     .text.ssd1306_DegToRad:0000000000000020 $d
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:53     .text.ssd1306_NormalizeTo0_360:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:59     .text.ssd1306_NormalizeTo0_360:0000000000000000 ssd1306_NormalizeTo0_360
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:87     .text.ssd1306_Reset:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:94     .text.ssd1306_Reset:0000000000000000 ssd1306_Reset
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:107    .text.ssd1306_WriteCommand:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:114    .text.ssd1306_WriteCommand:0000000000000000 ssd1306_WriteCommand
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:148    .text.ssd1306_WriteCommand:000000000000001c $d
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:153    .text.ssd1306_WriteData:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:160    .text.ssd1306_WriteData:0000000000000000 ssd1306_WriteData
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:195    .text.ssd1306_WriteData:000000000000001c $d
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:200    .text.ssd1306_FillBuffer:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:207    .text.ssd1306_FillBuffer:0000000000000000 ssd1306_FillBuffer
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:246    .text.ssd1306_FillBuffer:000000000000001c $d
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:251    .text.ssd1306_Fill:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:258    .text.ssd1306_Fill:0000000000000000 ssd1306_Fill
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:295    .text.ssd1306_Fill:000000000000001c $d
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:300    .text.ssd1306_UpdateScreen:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:307    .text.ssd1306_UpdateScreen:0000000000000000 ssd1306_UpdateScreen
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:360    .text.ssd1306_UpdateScreen:0000000000000034 $d
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:365    .text.ssd1306_DrawPixel:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:372    .text.ssd1306_DrawPixel:0000000000000000 ssd1306_DrawPixel
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:435    .text.ssd1306_DrawPixel:0000000000000050 $d
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:441    .text.ssd1306_WriteChar:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:448    .text.ssd1306_WriteChar:0000000000000000 ssd1306_WriteChar
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:592    .text.ssd1306_WriteChar:00000000000000b0 $d
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:597    .text.ssd1306_WriteString:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:604    .text.ssd1306_WriteString:0000000000000000 ssd1306_WriteString
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:657    .text.ssd1306_SetCursor:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:664    .text.ssd1306_SetCursor:0000000000000000 ssd1306_SetCursor
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:682    .text.ssd1306_SetCursor:0000000000000008 $d
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:687    .text.ssd1306_Line:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:694    .text.ssd1306_Line:0000000000000000 ssd1306_Line
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:825    .text.ssd1306_Polyline:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:832    .text.ssd1306_Polyline:0000000000000000 ssd1306_Polyline
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:911    .text.ssd1306_DrawArc:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:918    .text.ssd1306_DrawArc:0000000000000000 ssd1306_DrawArc
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1100   .text.ssd1306_DrawArc:0000000000000128 $d
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1106   .text.ssd1306_DrawCircle:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1113   .text.ssd1306_DrawCircle:0000000000000000 ssd1306_DrawCircle
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1254   .text.ssd1306_DrawRectangle:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1261   .text.ssd1306_DrawRectangle:0000000000000000 ssd1306_DrawRectangle
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1325   .text.ssd1306_SetContrast:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1332   .text.ssd1306_SetContrast:0000000000000000 ssd1306_SetContrast
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1361   .text.ssd1306_SetDisplayOn:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1368   .text.ssd1306_SetDisplayOn:0000000000000000 ssd1306_SetDisplayOn
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1409   .text.ssd1306_SetDisplayOn:000000000000001c $d
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1414   .text.ssd1306_Init:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1421   .text.ssd1306_Init:0000000000000000 ssd1306_Init
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1565   .text.ssd1306_Init:00000000000000c4 $d
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1570   .text.ssd1306_GetDisplayOn:0000000000000000 $t
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1577   .text.ssd1306_GetDisplayOn:0000000000000000 ssd1306_GetDisplayOn
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1591   .text.ssd1306_GetDisplayOn:0000000000000008 $d
ARM GAS  C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s 			page 41


C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1596   .bss.SSD1306:0000000000000000 $d
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1600   .bss.SSD1306:0000000000000000 SSD1306
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1603   .bss.SSD1306_Buffer:0000000000000000 $d
C:\Users\rahma\AppData\Local\Temp\cc4lDchn.s:1607   .bss.SSD1306_Buffer:0000000000000000 SSD1306_Buffer

UNDEFINED SYMBOLS
i2c_xfer7
memcpy
sin
cos
delay_ms
